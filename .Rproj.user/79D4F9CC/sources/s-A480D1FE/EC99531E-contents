# analyse data three

rm(list=ls())

library(ggplot2)
library(lme4)
library(dplyr)
library(reshape2)
library(lmerTest)
library(car)

cd<-getwd()

setup = "three"

setwd("computational_model/output_files")

# get the files
files<-list.files( pattern ="fittedData.three.*")

# absolute path
abs<-"/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/PREMUP/computational_model/output_files/"

file<-files[2]
# loop through the files
# for (file in files){

fittedData<-read.csv(paste(abs, file, sep=""))

# convert variables
fittedData$PE_level<-as.factor(fittedData$PE_level)

fittedData$session<-as.factor(fittedData$session)

fittedData$session<-factor(fittedData$session, level = c("ImmediateRec", "DelayedRec"))

# delete fillers
fittedData<-fittedData[fittedData$fillers!=1,]
##############################################################
#### PE depending on the response
##############################################################

fittedData$PEresp<-NA
for (o in 1: nrow(fittedData)){
if (!is.null(fittedData$Delta1)){
    if (fittedData$response[o]==1){
      fittedData$PEresp[o]<-fittedData$Delta1[o]
    }else if(fittedData$response[o]==2){
      fittedData$PEresp[o]<-fittedData$Delta2[o]
} else {fittedData$PEresp[o] <-NA}
}
}

#fittedData$PEresp<-fittedData$Delta

# delete NAs
fittedData<-fittedData[!is.na(fittedData$PE_level),]
#summarise
fittedData %>%
  group_by (PE_level) %>%
  summarise(mean=mean(PEresp, na.rm=T))


# distribution of PE by condition
PErespdistr<-ggplot(fittedData, aes(x= PEresp, fill=PE_level))
PErespdistr+geom_histogram()+ facet_grid( ~ PE_level)+ggtitle("choice-based PE")

# by participant

g<-ggplot(fittedData, aes(x=PEresp))+ geom_histogram()+
  #aes(colour = factor(SubNum))
  facet_wrap(.~SubNum)
print(g) 
# plot it PE by recog
PErespPlot<-ggplot(fittedData, aes(x=PEresp, y=id_acc))
PErespPlot+
  geom_line(stat = "smooth", method="glm",formula=y~x,method.args=list(family="binomial"),
            se=F, alpha = 0.5)+aes(colour = factor(SubNum))+
  geom_smooth(method="glm",formula=y~x,method.args=list(family="binomial"), colour="black", se=T)+
  theme(strip.text.x = element_text(size = 13))+
  facet_wrap(.~session) +ggtitle("Effect of choice-based PE on memory")

fittedData$session<-fittedData$group.y

modresp<-glmer(id_acc~poly(PEresp, 2)*session+(poly(PEresp, 2)*session|SubNum),family=binomial,
               data = fittedData, 
               control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))

summary(modresp)

Anova(modresp)

# only immed
modImm<-glmer(id_acc~PEresp+(PEresp|SubNum),family=binomial,
              data = fittedData[fittedData$session==0,])

summary(modImm)

modDel<-glmer(id_acc~PEresp+(PEresp|SubNum),family=binomial,
              data = fittedData[fittedData$session==1,])

summary(modDel)

### Pe quantiles
quantPEresp<-quantile(fittedData$PEresp, na.rm=T)

fittedData$PEquantresp<-NA
for (o in 1: nrow(fittedData)){
  if (!is.na(fittedData$PEresp[o])){
    if (fittedData$PEresp[o]> quantPEresp[1] & fittedData$PEresp[o]< (quantPEresp[2])){
      fittedData$PEquantresp[o]<-1
      
    }else if (fittedData$PEresp[o]>= quantPEresp[2] & fittedData$PEresp[o]< quantPEresp[3] ){
      fittedData$PEquantresp[o]<-2
    }else if(fittedData$PEresp[o]>=  quantPEresp[3] & fittedData$PEresp[o]<quantPEresp[4] ){
      fittedData$PEquantresp[o]<-3
    }else if(fittedData$PEresp[o]>=quantPEresp[4]){
      fittedData$PEquantresp[o]<-4
    }
  }
}

fittedData$PEquantresp<-as.factor(fittedData$PEquantresp)


gplotquant<-ggplot(fittedData[!is.na(fittedData$PEquantresp),], aes( x=PEquantresp, y=id_acc))+
  geom_bar(aes(PEquantresp, id_acc, fill = PEquantresp),
           position="dodge",stat="summary", fun.y="mean", SE=T)+
  
  #geom_errorbar(aes(y = id_acc, ymin = id_acc - ci, ymax = id_acc + ci),
               # color = "black", width = 0.10, data=dat_summary)+
  stat_summary(fun.data = "mean_cl_boot", size = 0.8, geom="errorbar", width=0.2 )+ 
  facet_wrap(session~.)+
  scale_x_discrete(
    labels=c(as.character(round(quantPEresp,2)), 0.99)
  )

print(gplotquant)

# at this point we need to take the error bars withing participant

###############################################################
#### PE depending on the observation
##############################################################

fittedData$PEobs<-NA
for (o in 1: nrow(fittedData)){
  if (fittedData$object_cat[o]==1){
    fittedData$PEobs[o]<-fittedData$Delta1[o]
  }else if(fittedData$object_cat[o]==2){
    fittedData$PEobs[o]<-fittedData$Delta2[o]
  }else if(fittedData$object_cat[o]==3){
    fittedData$PEobs[o]<-fittedData$Delta3[o]
  }
}

#summarise
fittedData %>%
  group_by (PE_level) %>%
  dplyr::summarise(mean=mean(PEobs, na.rm=T)) 

# distribution of PE by condition
PEobsdistr<-ggplot(fittedData, aes(x= PEobs, fill=PE_level))
print(
  PEobsdistr+geom_histogram()+ facet_grid( ~ PE_level)+ggtitle("PE based on the observation")
)

# by participant
ggplot(fittedData, aes(x=PEobs))+ geom_histogram()+
  #aes(colour = factor(SubNum))
  facet_wrap(.~SubNum)

# plot it PE by recog
PErespPlot<-ggplot(fittedData, aes(x=PEobs, y=id_acc))
print(
  PErespPlot+
    geom_line(stat = "smooth", method="glm",formula=y~x,method.args=list(family="binomial"),
              se=F, alpha = 0.5)+aes(colour = factor(SubNum))+
    geom_smooth(method="glm",formula=y~x,method.args=list(family="binomial"), colour="black", se=T)+
    theme(strip.text.x = element_text(size = 13))+
    facet_wrap(.~session) +ggtitle("Effect of observational PE on accuracy")
)
# analyse
modobs<-glmer(id_acc~PEobs*session+(PEobs*session|SubNum),family=binomial,
              data = fittedData, 
              control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))

summary(modobs)
Anova(modobs)

# drop session
modobsALL<-glmer(id_acc~PEobs+(PEobs|SubNum),family=binomial,
              data = fittedData)
            #  control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))

summary(modobsALL)

# # immediate recognition
# modobsIMM<-glmer(reid_accc_acc~PEobs+(PEobs|SubNum),family=binomial,
#                  data = fittedData[fittedData$session==0,]) 
# 
# 
# summary(modobsIMM)
# 
# # delayed recognition
# modobsDel<-glmer(rec_acc~PEobs+(PEobs|SubNum),family=binomial,
#                  data = fittedData[fittedData$session=="DelayedRec",]) 
# 
# 
# summary(modobsDel)

### Pe quantiles
quantPEobs<-quantile(fittedData$PEobs, na.rm=T)

fittedData$PEquantobs<-NA
for (o in 1: nrow(fittedData)){
  if (!is.na(fittedData$PEobs[o])){
    if (fittedData$PEobs[o]> quantPEobs[1] & fittedData$PEobs[o]< (quantPEobs[2])){
      fittedData$PEquantobs[o]<-1
      
    }else if (fittedData$PEobs[o]>= quantPEobs[2] & fittedData$PEobs[o]< quantPEobs[3] ){
      fittedData$PEquantobs[o]<-2
    }else if(fittedData$PEobs[o]>=  quantPEobs[3] & fittedData$PEobs[o]<quantPEobs[4] ){
      fittedData$PEquantobs[o]<-3
    }else if(fittedData$PEobs[o]>=quantPEobs[4]){
      fittedData$PEquantobs[o]<-4
    }
  }
}

# detach the Rmisc package
# detach("package:Rmisc", unload=TRUE)
fittedData$PEquantobs<-as.factor(fittedData$PEquantobs)

gplotquantObs<-ggplot(fittedData, aes( x=PEquantobs, y=id_acc))+
  geom_bar(aes(PEquantobs, id_acc, fill = PEquantobs),
           position="dodge",stat="summary", fun.y="mean", SE=T)+
  
  stat_summary(fun.data = "mean_cl_boot", size = 0.8, geom="errorbar", width=0.2 )+ 
  
  facet_wrap(session~.)+
  scale_x_discrete(
    labels=c(as.character(round(quantPEobs,2))) )

print(gplotquantObs)
