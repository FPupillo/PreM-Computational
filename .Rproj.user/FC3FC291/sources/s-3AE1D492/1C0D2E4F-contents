---
title: "Analysis Pilot Three - direct comparison of the PE"
author: "Francesco Pupillo"
date: "18/06/2021"
output: 
    html_document:
      toc: true
      toc_depth: 3
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
# model based stats
rm(list=ls())

library(ggplot2)
library(lme4)
library(dplyr)
library(reshape2)
library(lmerTest)
library(car)

# set current directory to the parent folder
setwd(dirname(getwd()))

cd<-getwd()
source("helper_functions/getPE.R")

setwd("output_files")

getwd()



```



### start with getting the exp1 data

```{r}
# get the files
#abs<-abs<-"/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/PREMUP/computational_model/output_files/"

abs<-"/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/PREMUP_computational/computational_model/output_files/"

exp1<-read.csv(paste(abs, "fittedData.exp1.Phase2.fLR_Instr.csv", sep=""))

# exclude fillers
exp1<-exp1[exp1$pred_Cond!=4,]

# select only immediate
exp1<-exp1[exp1$rec_session=="ImmediateRec",]

# exclude participants with low performance in phase1
exclPhase1<-c(7 ,16, 19, 20, 23)

exp1<-exp1[!exp1$SubNum %in% exclPhase1, ]




```


### Now exp2
```{r}

exp2<-read.csv(paste(abs, "fittedData.exp2.Phase2.fLR_Instr.csv", sep=""))

# select only immediate
exp2<-exp2[exp2$participant<41,]

# select only where practice == 0
exp2<-exp2[exp2$practice==0,]

# delete the fillers
exp2<-exp2[exp2$fillers==0,]

# exclude participants with low performance in phase1
exclPhase1exp2<-c(3 ,13, 28, 36, 39)

exp2<-exp2[!exp2$SubNum %in% exclPhase1exp2, ]

```

### create PE
```{r}
# select datasets 
exp1<-getPE(exp1,3)
exp2<-getPE(exp2, 2)


# select the variables of interest
VoI<-c("pe_level", "trialN", "rec_acc", "acc", "rec_session", "SubNum", "PE") 
exp1<-exp1[, VoI]
names(exp1)[c(1,3,4,5)]<-c("PE_level",  "id_acc","trial_acc", "session")

#exp2<-exp2[,VoI]
# convert PE level as factor
exp1$PE_level<-as.factor(exp1$PE_level)

# rename PE levels
levels(exp1$PE_level) <- c("0.9", "0.1", "0.5")

# order the PE
exp1$PE_level<-factor(exp1$PE_level, level = c("0.1", "0.5",  "0.9"))

# create scene condition
exp1$scn_condition<-ifelse(exp1$PE_level=="0.5", "Flat", "Strong")

# check distribution 
# PE feedb -pilot
PEDistrExp1<-ggplot(exp1, aes(x= PE,colour=scn_condition))
plot1<-
  PEDistrExp1+geom_density(aes(y=..density..),alpha=0.3)+
  #geom_histogram(aes(y=..density..))+
    geom_density()+
  #facet_grid( ~ scn_condition)+
  #ggtitle("PE distribution, Experiment 1")+
  annotate(geom="text",  label="a",size=8,family="serif")+
  guides(fill=guide_legend(title="Scene Condition"))+
  scale_fill_viridis_d()+
  theme_bw()
#theme(legend.position = "none")
print(plot1)


# now three
# rename scene condition
exp2$scn_condition<-as.factor(exp2$scn_condition)
levels(exp2$scn_condition)<-c("Flat", "Weak", "Strong")

PEDistrExp2<-ggplot(exp2, aes(x= PE, fill=scn_condition))

plot2<-
  PEDistrExp2+geom_density()+
  #facet_grid( ~ scn_condition)+
  #ggtitle("PE distribution, Experiment 1")
  theme_bw()+
  annotate(geom="text",  label="b",size=8,family="serif")+
  guides(fill=guide_legend(title="Scene Condition"))+
  #ylab("")+
  scale_fill_viridis_d()

print(plot2 )

ggpubr::ggarrange( plot1, plot2, ncol=2, labels = c("a)", "b)"))

ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures//PEdistr_fLR_instr.All.png"))
# now three
# PE obse -three

# by participant
ggplot(exp1, aes(x=PE))+ geom_histogram()+theme_bw()+
  facet_wrap(.~SubNum)

ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/PEdistr_fLR_instr_byID.exp1.png"))

ggplot(exp2, aes(x=PE))+ geom_histogram()+theme_bw()+
  facet_wrap(.~SubNum)

ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/PEdistr_fLR_instr_byID.exp2.png"))


PEdistrAccExp1<-ggplot(exp1, aes(x= PE, fill=PE_level))

print(
  PEdistrAccExp1+geom_histogram()+ facet_grid( trial_acc~ scn_condition)+ggtitle("PE observational distribution, Three")
)

PEdistrAccExp2<-ggplot(exp2, aes(x= PE, fill=scn_condition))

print(
  PEdistrAccExp2+geom_histogram()+ facet_grid( trial_acc~ scn_condition)+ggtitle("PE observational distribution, Three")
)



```


<!-- # save the datasets -->
<!-- ```{r} -->
<!-- setwd(dirname(getwd())) -->
<!-- getwd() -->
<!-- write.csv(exp1, "output_files/fittedData_exp1_RWfeedb_PEchoice_PEobs.csv") -->

<!-- write.csv(threeFeedb.exc, "output_files/fittedData_three_RWfeedb_PEchoice_PEobs.csv") -->

<!-- ``` -->





```{r}
# first, analyse accuracy by 
## PE by accuracy - pilot
# plot
exp1$trial_acc<-as.factor(exp1$trial_acc)

levels(exp1$trial_acc)<-c("Incorrect", "Correct")                          

print(
  ggplot(exp1, aes( x=PE, y=id_acc))+
    geom_line(stat="smooth",method = "glm",  formula=y~x,method.args=list(family="binomial"), alpha=0.5)+
    aes(colour = factor(SubNum), alpha=0.3)+
    geom_smooth(method="glm",formula=y~x,method.args=list(family="binomial"), colour="black", se=T)+
    theme(strip.text.x = element_text(size = 13))+ ylim(c(0,1))+
    facet_grid(.~trial_acc)+
    theme_bw()+
    ggtitle("Experiment 1")+
    #annotate(geom="text",  label="a",size=8,family="serif")+
    theme(legend.position = "none")+
    ylab("p(Hit)")
)

ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/PE_mem_fLR_instr.exp1.png")
       ,width = 7, height = 7)

#ggsave("PEobsByAccFeedbAll.png")
## PE by accuracy - exp2
exp2$trial_acc<-as.factor(exp2$trial_acc)

levels(exp2$trial_acc)<-c("Incorrect", "Correct")   

print(
  ggplot(exp2, aes( x=PE, y=id_acc))+
    geom_line(stat="smooth",method = "glm", formula=y~x,method.args=list(family="binomial"), alpha=0.5)+
    aes(colour = factor(SubNum), alpha=0.3)+
    geom_smooth(method="glm",formula=y~x,method.args=list(family="binomial"), colour="black", se=T)+
    theme(strip.text.x = element_text(size = 13))+ ylim(c(0,1))+
    facet_grid(.~trial_acc)+
    theme_bw()+
    ggtitle("Experiment 2")+
    theme(legend.position = "none")+
    ylab("p(Hit)")
)

ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/PE_mem_fLR_instr.exp2.png"), 
       width = 7, height = 7)

# analyse
PEbyAccExp1<-glmer(id_acc~PE*trial_acc+(trial_acc*PE|SubNum), family= binomial, 
                   data = exp1,
                   control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))

summary(PEbyAccExp1)
Anova(PEbyAccExp1)


# in the positive side
PEbyAccExp1Pos<-glmer(id_acc~PE+(PE|SubNum), family= binomial, 
                      data = exp1[exp1$trial_acc=="Correct",],
                      control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))

summary(PEbyAccExp1Pos)


# in the negative side
PEbyAccExp1Neg<-glmer(id_acc~PE+(PE|SubNum), family= binomial, 
                      data = exp1[exp1$trial_acc=="Incorrect",],
                      control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))

summary(PEbyAccExp1Neg)


#### exp2
# analyse
PEbyAccExp2<-glmer(id_acc~PE*trial_acc+(trial_acc*PE|SubNum), family= binomial, 
                   data = exp2,
                   control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))

summary(PEbyAccExp2)
Anova(PEbyAccExp2)

# in the positive side
PEbyAccExp2Pos<-glmer(id_acc~PE+(PE|SubNum), family= binomial, 
                      data = exp2[exp2$trial_acc=="Correct",],
                      control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))

summary(PEbyAccExp2Pos)


# in the negative side
PEbyAccExp2Neg<-glmer(id_acc~PE+(PE|SubNum), family= binomial, 
                      data = exp2[exp2$trial_acc=="Incorrect",],
                      control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))

summary(PEbyAccExp2Neg)

```



# Merge them
```{r}
exp1$exp<-"Experiment1"
exp2$exp<-"Experiment2"

exp2$session<-as.character(exp2$session)
exp1$session<-as.character(exp1$session)

exp1$PE_level<-as.character(exp1$PE_level)
exp2$PE_level<-as.character(exp2$PE_level)

exp1$scn_condition<-as.character(exp1$scn_condition)
exp2$scn_condition<-as.character(exp2$scn_condition)

# threeFeedb.exc$session<-as.factor(threeFeedb.exc$session)
# levels(threeFeedb.exc$session) <- c("ImmediateRec", "DelayedRec")

exp2$SubNum<-exp2$SubNum+max(unique(exp1$SubNum))

exp2<-exp2[, names(exp1)]
# merge thetwo
allData<-data.frame(rbind(exp1,exp2 ))
#allDataObs<-data.frame(rbind(pilotObs.exc,threeObs.exc ))

```

Save it
```{r}
setwd(dirname(getwd()))
getwd()
write.csv(allData, paste0(abs,"/fittedData_exp1-exp2_fLR_Instr.csv"))
```

<!-- # distribution of PE by trial accuracy and experiment -->
<!-- ```{r} -->

<!-- allDataFeedb$trial_acc<-as.factor(allDataFeedb$trial_acc) -->

<!-- levels(allDataFeedb$trial_acc)<-c("incorrect", "correct") -->

<!-- allDataFeedb$setup[allDataFeedb$setup=="pilot"]<-"Experiment1" -->
<!-- allDataFeedb$setup[allDataFeedb$setup=="three"]<-"Experiment2" -->


<!-- PEexpDistr<-ggplot(allDataFeedb, aes(x= PEobs, fill=trial_acc)) -->

<!-- print( -->
<!--   PEexpDistr+geom_histogram()+ facet_grid( trial_acc~ setup)+ggtitle("PE observational distribution, Three") -->
<!-- ) -->

<!-- ``` -->




<!-- # print the effect -->
<!-- ```{r} -->
<!-- # plot  -->
<!-- print( -->
<!--   ggplot(allDataFeedb, aes( x=PEchoice, y=id_acc))+ -->
<!--     geom_line(stat="smooth",method = "glm",  formula=y~x,method.args=list(family="binomial"), alpha=0.5)+ -->
<!--     aes(colour = factor(SubNum), alpha=0.3)+ -->
<!--     geom_smooth(method="glm",formula=y~x,method.args=list(family="binomial"), colour="black", se=T)+ -->
<!--     theme(strip.text.x = element_text(size = 13))+ ylim(c(0,1))+ -->
<!--     facet_grid(setup~session) -->
<!-- ) -->

<!-- print( -->
<!--   ggplot(allDataFeedb, aes( x=PEobs, y=id_acc))+ -->
<!--     geom_line(stat="smooth",method = "glm",  formula=y~poly(x,2),method.args=list(family="binomial"), alpha=0.5)+ -->
<!--     aes(colour = factor(SubNum), alpha=0.3)+ -->
<!--     geom_smooth(method="glm",formula=y~poly(x,2),method.args=list(family="binomial"), colour="black", se=T)+ -->
<!--     theme(strip.text.x = element_text(size = 13))+ ylim(c(0,1))+ -->
<!--     facet_grid(setup~session) -->
<!-- ) -->
<!-- ``` -->

<!-- ```{r} -->
<!-- print( -->
<!--   ggplot(allDataFeedb[allDataFeedb$session=="ImmadiateRec",], aes( x=PEobs, y=id_acc))+ -->
<!--     geom_line(stat="smooth",method = "glm",  formula=y~x,method.args=list(family="binomial"), alpha=0.5)+ -->
<!--     aes(colour = factor(SubNum), alpha=0.3)+ -->
<!--     geom_smooth(method="glm",formula=y~x,method.args=list(family="binomial"), colour="black", se=T)+ -->
<!--     theme(strip.text.x = element_text(size = 13))+ ylim(c(0,1))+ -->
<!--     facet_grid(trial_acc~setup) -->
<!-- ) -->


<!-- # analyse -->
<!-- PEbyAccAll<-glmer(id_acc~PEobs*trial_acc*setup*session+(trial_acc*PEobs|SubNum), family= binomial,  -->
<!--                   data = allDataFeedb[!is.na(allDataFeedb$PEobs), ], -->
<!--                   control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000))) -->


<!-- summary(PEbyAccAll) -->

<!-- Anova(PEbyAccAll) -->

<!-- # only in immediate session -->
<!-- print( -->
<!--   ggplot(allDataFeedb[allDataFeedb$session=="ImmediateRec",], aes( x=PEobs, y=id_acc))+ -->
<!--     geom_line(stat="smooth",method = "glm",  formula=y~x,method.args=list(family="binomial"), alpha=0.5)+ -->
<!--     aes(colour = factor(SubNum), alpha=0.3)+ -->
<!--     geom_smooth(method="glm",formula=y~x,method.args=list(family="binomial"), colour="black", se=T)+ -->
<!--     theme(strip.text.x = element_text(size = 13))+ ylim(c(0,1))+ -->
<!--     facet_grid(setup~trial_acc)+ -->
<!--     ylab("Recognition %")+ -->
<!--     xlab("PE") -->
<!-- ) -->


<!-- PEbyAccAllimm<-glmer(id_acc~PEobs*trial_acc*setup+(trial_acc*PEobs|SubNum), family= binomial,  -->
<!--                      data = allDataFeedb[!is.na(allDataFeedb$PEobs) & allDataFeedb$session=="ImmediateRec", ], -->
<!--                      control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000))) -->


<!-- summary(PEbyAccAllimm) -->

<!-- Anova(PEbyAccAllimm, type="III") -->

<!-- # do it separately for three and prior -->
<!-- PEbyAccAllimmexp1<-glmer(id_acc~PEobs*trial_acc+(trial_acc*PEobs|SubNum), family= binomial,  -->
<!--                      data = allDataFeedb[!is.na(allDataFeedb$PEobs) & allDataFeedb$session=="ImmediateRec" & allDataFeedb$setup=="Experiment1", ], -->
<!--                      control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000))) -->

<!-- summary(PEbyAccAllimmexp1) -->

<!-- Anova(PEbyAccAllimmexp1, type="III") -->

<!-- # experiment 2 -->
<!-- PEbyAccAllimmexp2<-glmer(id_acc~poly(PEobs,2)*trial_acc+(trial_acc*poly(PEobs,2)|SubNum), family= binomial,  -->
<!--                      data = allDataFeedb[!is.na(allDataFeedb$PEobs) & allDataFeedb$session=="ImmediateRec" & allDataFeedb$setup=="Experiment2", ], -->
<!--                      control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000))) -->

<!-- #summary(PEbyAccAllimmexp2) -->

<!-- Anova(PEbyAccAllimmexp2, type="III") -->

<!-- # now experiment 2 -->

<!-- # in delayed -->
<!-- PEbyAccAlldel<-glmer(id_acc~poly(PEobs,2)*trial_acc+(trial_acc*poly(PEobs,2)|SubNum), family= binomial,  -->
<!--                      data = allDataFeedb[!is.na(allDataFeedb$PEobs) & allDataFeedb$session=="DelayedRec", ], -->
<!--                      control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000))) -->

<!-- summary(PEbyAccAlldel) -->

<!-- Anova(PEbyAccAlldel) -->

<!-- # drop inter -->
<!-- PEbyAccAllimm<-glmer(id_acc~PEobs+trial_acc+(trial_acc+PEobs|SubNum), family= binomial,  -->
<!--                      data = allDataFeedb[!is.na(allDataFeedb$PEobs) & allDataFeedb$session=="DelayedRec", ], -->
<!--                      control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000))) -->

<!-- summary(PEbyAccAllimm) -->

<!-- # plot     -->
<!-- print( -->
<!--   ggplot(allDataFeedb, aes( x=PEobs, y=id_acc))+ -->
<!--     geom_line(stat="smooth",method = "glm",  formula=y~x,method.args=list(family="binomial"), alpha=0.5)+ -->
<!--     aes(colour = factor(SubNum), alpha=0.3)+ -->
<!--     geom_smooth(method="glm",formula=y~x,method.args=list(family="binomial"), colour="black", se=T)+ -->
<!--     theme(strip.text.x = element_text(size = 13))+ ylim(c(0,1))+ -->
<!--     facet_grid(trial_acc~session) -->
<!-- ) -->

<!-- # check only experiment 1 and break down the interaction -->
<!-- PEbyAccAllimmPosexp1<-glmer(id_acc~PEobs+(PEobs|SubNum), family= binomial,  -->
<!--                         data =  -->
<!--                           #allDataFeedb[!is.na(allDataFeedb$PEobs) & -->
<!--                           allDataFeedb[allDataFeedb$session=="ImmediateRec" &  -->
<!--                           allDataFeedb$setup=="Experiment1" & -->
<!--                           allDataFeedb$trial_acc=="correct" ,], -->
<!--                         control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000))) -->

<!-- summary(PEbyAccAllimmPosexp1) -->
<!-- Anova(PEbyAccAllimmPosexp1) -->


<!-- PEbyAccAllimmNegexp1<-glmer(id_acc~PEobs+(PEobs|SubNum), family= binomial,  -->
<!--                         data =  -->
<!--                           #allDataFeedb[!is.na(allDataFeedb$PEobs) & -->
<!--                           allDataFeedb[allDataFeedb$session=="ImmediateRec" &  -->
<!--                           allDataFeedb$setup=="Experiment1" & -->
<!--                           allDataFeedb$trial_acc=="incorrect" ,], -->
<!--                         control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000))) -->

<!-- summary(PEbyAccAllimmNegexp1) -->
<!-- Anova(PEbyAccAllimmNegexp1) -->


<!-- # now experiment 2 -->
<!-- PEbyAccAllimmPosexp2<-glmer(id_acc~PEobs+((PEobs)|SubNum), family= binomial,  -->
<!--                         data =  -->
<!--                           #allDataFeedb[!is.na(allDataFeedb$PEobs) & -->
<!--                           allDataFeedb[allDataFeedb$session=="ImmediateRec" &  -->
<!--                           allDataFeedb$setup=="Experiment2" & -->
<!--                           allDataFeedb$trial_acc=="correct" ,], -->
<!--                         control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000))) -->

<!-- summary(PEbyAccAllimmPosexp2) -->

<!-- Anova(PEbyAccAllimmPosexp1) -->
<!-- PEbyAccAllimmNeg<-glmer(id_acc~PEobs+(PEobs|SubNum), family= binomial,  -->
<!--                         data = allDataFeedb[!is.na(allDataFeedb$PEobs) & allDataFeedb$session=="ImmediateRec" & -->
<!--                                               allDataFeedb$trial_acc==0  ,], -->
<!--                         control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000))) -->

<!-- summary(PEbyAccAllimmNeg) -->

<!-- PEbyAccAllimmNegexp2<-glmer(id_acc~PEobs+((PEobs)|SubNum), family= binomial,  -->
<!--                         data =  -->
<!--                           #allDataFeedb[!is.na(allDataFeedb$PEobs) & -->
<!--                           allDataFeedb[allDataFeedb$session=="ImmediateRec" &  -->
<!--                           allDataFeedb$setup=="Experiment2" & -->
<!--                           allDataFeedb$trial_acc=="incorrect" ,], -->
<!--                         control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000))) -->

<!-- summary(PEbyAccAllimmNegexp2) -->

<!-- # allDataFeedb[allDataFeedb$session =="ImmediateRec",] %>% -->
<!-- #   group_by(SubNum, trial_acc, PE_level) %>% -->
<!-- #   mutate(minN = min(tally()))  -->

<!-- allDataNew<-allDataFeedb[allDataFeedb$PE_level!= 0.9 & allDataFeedb$trial_acc!=1,] -->

<!-- ``` -->

# analyse with quantiles
```{r message=FALSE, warning=FALSE}

# create a vector
#binnedData<-data.frame(matrix(ncol = 7, nrow = 0))
#names(binnedData)<-c("quantile","PEobs" , "id_acc" , "PE_level","SubNum" , "trial_acc", "session" )

binnedData<-vector()
for (s in unique(allData$SubNum)){
  tryCatch({
    # subset participant
    currdf<-allData[allData$SubNum==s,]
    #for (PElev in unique(currdf$PE_level)){
    #currdfPE<-currdf[currdf$PE_level==PElev,]
    for (trial_acc in c("Correct","Incorrect")){
      currfacc<-currdf[currdf$trial_acc==trial_acc,]
      # sort them
      #currdfPEacc<-currdfPEacc[order(currdfPEacc$PEobs),]
      # get quantiles
      quantiles<-quantile(currfacc$PE)
      # assign quantiles
      currfacc$quantile<-NA
      for (n in 1:nrow(currfacc)){
        if (currfacc$PE[n]>=quantiles[1] & currfacc$PE[n]<quantiles[2]){
          currfacc$quantile[n]<-1  
        } else if(currfacc$PE[n]>=quantiles[2] & currfacc$PE[n]<quantiles[3]){
          currfacc$quantile[n]<-2
          
        } else if (currfacc$PE[n]>=quantiles[3] & currfacc$PE[n]<quantiles[4]){
          currfacc$quantile[n]<-3
        } else if (currfacc$PE[n]>=quantiles[4] ){
          currfacc$quantile[n]<-4
        } 
        
      }
      
      # create mean of id_acc and P by quantile
      df<-currfacc %>%
        group_by(quantile) %>%
        dplyr::summarise(PE = mean(PE), id_acc = mean(id_acc),
                         #PE_level = unique(PE_level), 
                         SubNum = unique(SubNum), 
                         trial_acc = unique(trial_acc),
                         exp = unique(exp))
      
      
      binnedData<-rbind(binnedData, as.data.frame(df))   
    }
  },  error=function(e){cat("ERROR :",conditionMessage(e), "\n")})  
  
}

# visualize
binnedData$quantile<-as.factor(binnedData$quantile)

binnedData$bin<-(binnedData$quantile)

# plot
PlotBind<-ggplot(binnedData, aes(x= PE, fill=bin))
print(
  PlotBind+geom_density()+ facet_grid( trial_acc~ exp)+theme_bw()
  
)

ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/PEdistr_binned.png"), 
       width = 7, height = 7)

# by participant
# binnedData%>%
#   group_by(SubNum) %>%
#   tally()


# take the se within-participant
data_agg<-binnedData %>%
  group_by(bin,  trial_acc, SubNum) %>%
  dplyr::summarise(id_acc = mean(id_acc, na.rm = T))

library(Rmisc)
dat_summary <- summarySEwithin(data_agg,
                               measurevar = "id_acc",
                               withinvars = c("bin", "trial_acc"), 
                               idvar = "SubNum")

data_agg$bin<-as.factor(data_agg$bin)
gplotquant<-ggplot(data_agg, aes( x=bin, y=id_acc))+
  geom_bar(aes(bin, id_acc, fill = bin),
           position="dodge",stat="summary", fun.y="mean", SE=F)+
  
  geom_errorbar(aes(y = id_acc, ymin = id_acc - se, ymax = id_acc + se),
                color = "black", width = 0.10, data=dat_summary)+
  
  #geom_jitter( size=0.4,width=0.1, data=data_agg)+ 

  facet_wrap(trial_acc~.)+
  theme_bw()+
  ylab("% Hit")+
  theme(legend.position = "none")
  geom_jitter( size=0.4,width=0.1, data=data_agg)+ 
#scale_x_discrete(
#  labels=c(as.character(round(quantile,2))) )

print(gplotquant)

ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/binnedPE_mem.png"), 
       width = 7, height = 7)

PEquant<-lmer(id_acc~bin*trial_acc*exp+(bin+trial_acc|SubNum), 
              data = binnedData)

summary(PEquant)    
Anova(PEquant, type="III")

# dropping the setup
PEquantInt<-lmer(id_acc~quantile*trial_acc+(quantile+trial_acc|SubNum), 
                 data = binnedData)

summary(PEquantInt)

library(lsmeans)

lsmeans(PEquantInt, pairwise~quantile*trial_acc)

# 0 and 1 separately
PEquantNeg<-lmer(id_acc~quantile+(1|SubNum), 
                 data = binnedData[binnedData$trial_acc=="Incorrect",])

summary(PEquantNeg)

Anova(PEquantNeg)

#lsmeans(PEquantNeg, pairwise~quantile)


PEquantPos<-lmer(id_acc~quantile+(1|SubNum), 
                 data = binnedData[binnedData$trial_acc=="Correct",])

summary(PEquantPos)      



```

<!-- # separately for pilot and three -->
<!-- ```{r} -->
<!-- # first, pilot -->
<!-- data_agg_1<-binnedData[binnedData$setup=="Experiment1",] %>% -->
<!--   group_by(quantile,  trial_acc, SubNum) %>% -->
<!--   dplyr::summarise(id_acc = mean(id_acc, na.rm = T)) -->

<!-- library(Rmisc) -->
<!-- dat_summary_1 <- summarySEwithin(data_agg_1, -->
<!--                                  measurevar = "id_acc", -->
<!--                                  withinvars = c("quantile", "trial_acc"),  -->
<!--                                  idvar = "SubNum") -->

<!-- data_agg_1$quantile<-as.factor(data_agg_1$quantile) -->
<!-- gplotquantObs_1<-ggplot(data_agg_1, aes( x=quantile, y=id_acc))+ -->
<!--   geom_bar(aes(quantile, id_acc, fill = quantile), -->
<!--            position="dodge",stat="summary", fun.y="mean", SE=F)+ -->

<!--   geom_errorbar(aes(y = id_acc, ymin = id_acc - se, ymax = id_acc + se), -->
<!--                 color = "black", width = 0.10, data=dat_summary_1)+ -->
<!--   facet_wrap(trial_acc~.)+ -->
<!--   ylab("% recognition") + -->
<!--   xlab("PE") -->
<!-- #scale_x_discrete( -->
<!-- #  labels=c(as.character(round(quantile,2))) ) -->

<!-- print(gplotquantObs_1) -->

<!-- PEquant<-lmer(id_acc~quantile*trial_acc+(quantile+trial_acc|SubNum),  -->
<!--               data = data_agg_1) -->

<!-- summary(PEquant)     -->
<!-- Anova(PEquant, type="III") -->

<!-- lsmeans(PEquant, pairwise~quantile*trial_acc) -->


<!-- # 0 and 1 separately -->
<!-- PEquantNeg<-lmer(id_acc~quantile+(1|SubNum),  -->
<!--                  data = data_agg_1[data_agg_1$trial_acc=="incorrect",]) -->

<!-- summary(PEquantNeg) -->

<!-- # pairwise comparisons -->
<!-- library(lsmeans) -->

<!-- lsmeans(PEquantNeg, pairwise~quantile) -->


<!-- PEquantPos<-lmer(id_acc~quantile+(1|SubNum),  -->
<!--                  data = data_agg_1[data_agg_1$trial_acc=="correct",]) -->

<!-- summary(PEquantPos)       -->

<!-- # now three three -->
<!-- # take the se within-participant -->
<!-- data_agg_2<-binnedData[binnedData$setup=="Experiment2",] %>% -->
<!--   group_by(quantile,  trial_acc, SubNum) %>% -->
<!--   dplyr::summarise(id_acc = mean(id_acc, na.rm = T)) -->

<!-- library(Rmisc) -->
<!-- dat_summary_2 <- summarySEwithin(data_agg_2, -->
<!--                                  measurevar = "id_acc", -->
<!--                                  withinvars = c("quantile", "trial_acc"),  -->
<!--                                  idvar = "SubNum") -->

<!-- data_agg_2$quantile<-as.factor(data_agg_2$quantile) -->
<!-- gplotquantObs_2<-ggplot(data_agg_2, aes( x=quantile, y=id_acc))+ -->
<!--   geom_bar(aes(quantile, id_acc, fill = quantile), -->
<!--            position="dodge",stat="summary", fun.y="mean", SE=F)+ -->

<!--   geom_errorbar(aes(y = id_acc, ymin = id_acc - se, ymax = id_acc + se), -->
<!--                 color = "black", width = 0.10, data=dat_summary_2)+ -->
<!--   facet_wrap(trial_acc~.) -->
<!-- #scale_x_discrete( -->
<!-- #  labels=c(as.character(round(quantile,2))) ) -->

<!-- print(gplotquantObs_2) -->

<!-- PEquant2<-lmer(id_acc~quantile*trial_acc+(quantile+trial_acc|SubNum),  -->
<!--                data = data_agg_2) -->

<!-- summary(PEquant2)     -->
<!-- Anova(PEquant2, type="III") -->

<!-- lsmeans(PEquant2, pairwise~quantile*trial_acc) -->




<!-- # 0 and 1 separately -->
<!-- PEquantNeg<-lmer(id_acc~quantile+(1|SubNum),  -->
<!--                  data = data_agg[data_agg$trial_acc==0,]) -->

<!-- summary(PEquantNeg) -->


<!-- PEquantPos<-lmer(id_acc~quantile+(1|SubNum),  -->
<!--                  data = data_agg[data_agg$trial_acc==1,]) -->

<!-- summary(PEquantPos)       -->


<!-- ``` -->
<!-- ### check the difference between value of the predicted and value of the observed one -->
<!-- ```{R} -->
<!-- names(pilotFeedb) -->

<!-- getPrVsObs<-function(df){ -->
<!--   #------------------------------------------------------------------------# -->
<!--   # function that returns a variable that represents the difference between -->
<!--   # the value of the category that participants predicted - the value of the  -->
<!--   # category that participants observed -->
<!--   # INPUT - dataframe with fitted data (RL model) -->
<!--   # OUTPUT - a dataframe with the prVsObs variable -->
<!--   #------------------------------------------------------------------------# -->

<!--   # create the variable   -->
<!--   df$prVsObs[n]<-NA -->
<!--   for (n in 1:nrow(df)){ -->

<!--     if (df$response[n]!=0){  -->
<!--       predicted<-paste("P", df$response[n],sep="") -->
<!--       observed<-paste("P", df$object_cat[n],sep="") -->
<!--       df$prVsObs[n]<-df[n, predicted] - df[n, observed] -->


<!--     }else { # we are not assigning values when there was no choice -->
<!--       df$prVsObs[n]<-NA -->
<!--     } -->


<!--   } -->
<!--   return(data) -->
<!-- } -->


<!-- pilotFeedb<-getPrVsObs(pilotFeedb) -->

<!-- ``` -->