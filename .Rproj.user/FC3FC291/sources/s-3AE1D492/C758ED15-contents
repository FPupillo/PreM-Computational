##-------------------------------------------------------------------------------
##  Model comparison: compare fit                                              --
##  Created by Francesco Pupillo, Goethe University Frankfurt                  --
##  FRI MAY 28 11:13:00 2021                                                   --
##  This script compare the log likelihood and BIC of the different models to  --
##      find the ones that best account for the data.                          --
##      It does it for the different setups and print the graphs               --
##  last update =                                                              --
##  Fri Jun 18 14:48:12 2021                                                   --
##-------------------------------------------------------------------------------

txt<-("This script compare the log likelihood and BIC of the different models to
    find the ones that best account for the data. 
    It does it for the different setups and print the graphs")

library(bannerCommenter)
banner(x ="Model comparison: compare fit", "Created by Francesco Pupillo, 
       Goethe University Frankfurt", 
       "FRI MAY 28 11:13:00 2021", txt, 
      "last update = ", date(), emph = F, center = F, bandChar = "-")
banner(txt, bandChar = "-")

library(lme4)
library(lmerTest)
library(car)
library(reshape2)
library(ggplot2)
library(dplyr)
library(ggjoy)

rm(list=ls())

# set current directory in the parent folder
setwd(dirname(getwd()))

cd<-getwd()

# function that takes the arguments from the command line
Args<-commandArgs(trailingOnly = T)
# the only argument is setup
setup<-Args[1]

setup<-c( "exp2")

setup<-ifelse(setup=="exp1", "pilot", "three")

#for (s in setups){
s<-setup 
 print(s)
  
  # retrieve the different models
  setwd(paste("premup-", s,"/outputs/group_level/computational_model", sep=""))
  
  if (s=="pilot"){ # if this is the pilot, the Q is 0.33
    
    # list the files with parameter estimation
    files<-list.files(pattern="ParameterEstimation.betalimit=10.initialQ=0.33.*")
    files2<-list.files(pattern="ParameterEstimation.betalimit=30.initialQ=0.33.*")
    # and, as the name is longer, sartpoint for substringing is earlier
    startStr<-48
    
  }else{
    
  # list the files with parameter estimation
  files<-list.files(pattern="ParameterEstimation.betalimit=10.initialQ=0.5.*")
  files2<-list.files(pattern="ParameterEstimation.betalimit=30.initialQ=0.5.*")
  files<-c(files, files2)
  # startpoint is 48
  startStr<-47
  
  }
  
  # create dataset to store the bic
  BicAll<-vector()
  
  
  # loop through the files
  for (n in 1:length(files)){
    
    # read the first files
    cfile<-read.csv(files[n])
    
    # select parameters
    cfile<-cfile[,c("PartNum", "BIC", "LogLikel")]
    
    # assing the name of the model
    modname<-substr(files[n], startStr, nchar(files[n])-4 )
    
    # assing the identifier
    cfile$model<-rep(modname, times=nrow(cfile))
    
    # assogm tp the dataframe
    BicAll<-rbind(BicAll, cfile)
    
  }
  
  setwd(cd)
  
  # subset
  
  #BicAll<-BicAll[, c(1,6,7,8)]
  
  # Count for how many participants a precise model was the best fit
  # create two datasets = one for the LL and one for the BIC
  
  # try to convert to wide
  library(reshape2)
  
  # Model of interest
  MoI<- c("RW_feedb", "OptimalBayesian", "RW_obsALL")
  BicAll<-BicAll[BicAll$model==MoI[1] | BicAll$model==MoI[2] 
                 | BicAll$model==MoI[3],]
  
  BicAll_wideBIC <- dcast(BicAll, PartNum ~ model, value.var=c("BIC"), 
                          fun.aggregate =sum)
  BicAll_wideLL <- dcast(BicAll, PartNum ~ model, value.var=c("LogLikel"),
                         fun.aggregate =sum)

  # find the best model for each participant according to BIC
  # (the model that minimize the BIC)

  ggplot(BicAll, aes(x = model,y= BIC))+
    geom_bar(aes(model, BIC, fill = model),
             position="dodge",stat="summary", fun="mean", SE=T)+
    stat_summary(fun.data = "mean_cl_boot", size = 0.8, geom="errorbar",
                 width=0.2 )+
    #geom_jitter( size=1,width=0.1)+
    theme(axis.text.x = element_blank())+ # we are showing the different levels 
    # through the colors, so we can avoid naming the bars
    theme(axis.ticks.x = element_blank())+
    
    theme_bw()
  
  
  BicAll_wideBIC$BestModel<-NA
  BicAll_wideBIC$SecondBest<-NA
  
  for (j in 1: nrow(BicAll_wideBIC)){
    tryCatch({
     # index<-which(BicAll_wideBIC[j,]==min(BicAll_wideBIC[j,(2:(length(files)))], na.rm=T))
      
     
      index<-which(BicAll_wideBIC[j,]==min(BicAll_wideBIC[j,MoI]))
      index2<-which(BicAll_wideBIC[j,]==unlist(sort(BicAll_wideBIC[j,MoI])[2]))
      if (length(index)>1) {# fi there are more than one model
        BicAll_wideBIC$BestModel[j]<-NA
        BicAll_wideBIC$SecondBest[j]<-NA
        
      }else{
      BicAll_wideBIC$BestModel[j]<-names(BicAll_wideBIC[index])
      BicAll_wideBIC$SecondBest[j]<-names(BicAll_wideBIC[index2])
      
      }
    }, error = function(e) { print(paste("problem with number", j))}, 
       warning = function(f) { print(paste("warning with number", j))}) 
  }
  
  # create difference between the best model and the second best
  BicAll_wideBIC$BestModelBIC<-NA
  BicAll_wideBIC$SecondBestModelBIC<-NA
  
  for (n in 1: nrow(BicAll_wideBIC)){
    tryCatch({
 BicAll_wideBIC$BestModelBIC[n]<-BicAll_wideBIC[n,BicAll_wideBIC$BestModel[n]]
 BicAll_wideBIC$SecondBestModelBIC[n]<-BicAll_wideBIC[n,BicAll_wideBIC$SecondBest[n]]
    }, error=function(e){}
    )
  }
  
  # create the difference between the two
  BicAll_wideBIC$BicDiff<-BicAll_wideBIC$SecondBestModelBIC -BicAll_wideBIC$BestModelBIC
  
  # create the evidence
  BicAll_wideBIC$evidence<-NA
  for (n in 1: nrow(BicAll_wideBIC)){
    tryCatch({
      
       if(BicAll_wideBIC$BicDiff[n]>10){
         BicAll_wideBIC$evidence[n]<-"very strong"
       } else if (BicAll_wideBIC$BicDiff[n]<10 & (BicAll_wideBIC$BicDiff[n]>=6)){
         BicAll_wideBIC$evidence[n]<-"strong"
         
       }else if ( BicAll_wideBIC$BicDiff[n]<6 & (BicAll_wideBIC$BicDiff[n]>=2)){
         BicAll_wideBIC$evidence[n]<-"positive"
         
       } else{
         BicAll_wideBIC$evidence[n]<-"weak"
         
       }
    }, error=function(e){}
)
  }
  
  # now long
  BicAll_long<-melt(BicAll_wideBIC[, c(1, 5, 10)], id.vars = c("PartNum", "BestModel" ))
  
  BicAll_long$value<-as.factor(BicAll_long$value)
  levels(BicAll_long$value)<-c("very strong", "strong", "positive", "weak")
  
  names(BicAll_long)[4]<-"evidence"
  ggplot(BicAll_long[!is.na(BicAll_long$evidence),], 
         aes( x=BestModel, fill = evidence)) + 
    geom_bar(position="stack", stat="count")+
    scale_fill_grey()+
    ylab("Participants")+
    coord_flip()+
    theme_bw()
  
  ggsave(paste("computational_model/figures/model_comparison_",s, ".jpg", sep=""))
  
}

#   # sum first
#   #select moi
# 
#   bicSel<-(BicAll_wideBIC[,MoI])
#   bicsum<-colSums(bicSel)
#   names(bicsum)<-names(bicSel)
#   bicsum
#   
#   #select Moi
#   bicsum<-bicsum[bicsum]
#   
#   # difference of best model
#   
#   # exclude obs all
#   # BicAll_wideBIC$BestModel<-NA
#   # for (j in 1: nrow(BicAll_wideBIC)){
#   #   tryCatch({
#   #     index<-which(BicAll_wideBIC[j,]==min(BicAll_wideBIC[j,c(2:6,8:14)], na.rm=T))
#   #     BicAll_wideBIC$BestModel[j]<-names(BicAll_wideBIC[index])
#   #   }, error = function(e) { print(paste("problem with number", j))}) 
#   # }
#   
#   table(BicAll_wideBIC$BestModel)
#   
#   # print the files
#   BestModel<-write.csv(BicAll_wideBIC, paste("computational_model/output_files/model_fitting_", 
#                                              s, ".csv", sep=""))
#   
#   # create and save graph
#   #jpeg(paste("premup-", s,"/figures/group_level/model_comparison_Bic.jpg", sep=""), width = 1600, height = 500)
#   # substring the names
#   BicAll_wideBIC$BestModelsubstr<-substr(BicAll_wideBIC$BestModel, 16, nchar(BicAll_wideBIC$BestModel))
#   
#   ggplot(BicAll_wideBIC, aes(BestModelsubstr))+geom_bar()+
#   theme(axis.text.x = element_text(  angle = -15))
#     
# 
#   ggsave(paste("premup-", s,"/figures/group_level/model_comparison_Bic.jpg", sep=""))
#   
#   # select only the two models, winning model, and participant variable
#   #BicAll_wideBIC<-BicAll_wideBIC[, c(1, 4,11,19)]
#   
#   # plot
#   #plot(BicAll_wideBIC$RescorlaWagner_obsALL,BicAll_wideBIC$RescorlaWagner_feedbALL )
#   
#   # mean fit
#   mean(BicAll_wideBIC$RescorlaWagner_obsALL1n)
#   mean(BicAll_wideBIC$RescorlaWagner_obsALL)
#   mean(BicAll_wideBIC$RescorlaWagner_obsdualLR)
#   
#   BicAllsubs<-BicAll[BicAll$model=="RescorlaWagner_obsALL1n" | BicAll$model=="RescorlaWagner_obsALL" | 
#                        BicAll$model=="RescorlaWagner_obsdualLR",]
#   # anova
#   mod<-lmer(BIC~model+(1| PartNum), data=BicAllsubs)
#   summary(mod)
#   anova(mod)
#   
#   # print them
#   #write.csv(BicAll_wideBIC, "computational_model/output_files/Bic_pilot.csv")
#   
#   # create differencebetween feedb and obs
#   #BicAll_wideBIC$feedbMinObs<-BicAll_wideBIC$RescorlaWagner_feedbALL-BicAll_wideBIC$RescorlaWagner_obsALL
#   
#   
#   
#   #dev.off()
#   
#   # now loglikelihood
#   MoI<- c("RescorlaWagner_obsALL", "RescorlaWagner_obsALL1n", "RescorlaWagner_obsdualLR")
#   
#   BicAll_wideLL$BestModel<-NA
#   for (j in 1: nrow(BicAll_wideLL)){
#     tryCatch({
#       index<-which(BicAll_wideLL[j,MoI]==max(BicAll_wideLL[j,MoI], na.rm=T))
#       BicAll_wideLL$BestModel[j]<-names(BicAll_wideLL[index])
#     }, error = function(e) { print(paste("problem with number", j))}) 
#   }
#   
# table(BicAll_wideLL$BestModel)
#   
#   #jpeg(paste("premup-", s,"/figures/group_level/model_comparison_LL.jpg", sep=""), width = 1600, height = 500)
#   #ggplot(BicAll_wideLL, aes(BestModel))+geom_bar()
#   
#   #ggsave(paste("premup-", s,"/figures/group_level/model_comparison_LL.jpg", sep=""))
#   
#   #dev.off()
#   # write the winning models
#   winnmodBIC<-names(sort(table(BicAll_wideBIC$BestModel), decreasing=T)[1])
#   winnmodLL<-names(sort(table(BicAll_wideLL$BestModel), decreasing=T)[1])
#   
#   # report the number of participants for which this was the best model
#   nbestBIC<-max(table(BicAll_wideBIC$BestModel))
#   nbestLL<-max(table(BicAll_wideLL$BestModel))
#   
#   # retrieve 
#   winnmodfile<-read.csv("computational_model/winning_mods.csv")
#   
#   # convert to char
#   for (n in names(winnmodfile)){
#     winnmodfile[[n]]<-as.character(winnmodfile[[n]])
#   }
#   
#   winnmodfile[winnmodfile$setup==s,]<-c(s,winnmodBIC,winnmodLL, nbestBIC, nbestLL, 
#                                         # now the percentage of participants for which it was the best
#                                         nbestBIC/nrow(BicAll_wideBIC), nbestLL/nrow(BicAll_wideLL))
#   
#   
#   # save it
#   write.csv(winnmodfile, "computational_model/winning_mods.csv", row.names = F)
# }
# 
# # read the file
# model_comp<-read.csv("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/PREMUP/computational_model/winning_mods.csv")
# 
# # print a table
# png("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/PREMUP/computational_model/figures/winningmod_table.png",
#     height = 200, width = 750)
# grid.table(model_comp)
# ttheme_minimal(padding = unit(c(10,5), "mm"))
# dev.off()
