data_agg_exp1<-exp1 %>%
group_by(prediction_condition, participant) %>%
dplyr::summarise(rec_acc = mean(recognition_accuracy, na.rm = T),
experiment = first(experiment))
data_agg_exp1_acc<-exp1 %>%
group_by(  prediction_accuracy, participant) %>%
dplyr::summarise(rec_acc = mean(recognition_accuracy, na.rm = T),
experiment = first(experiment))
library(Rmisc)
dat_summary_exp1 <- summarySEwithin(data_agg_exp1,
measurevar = "rec_acc",
withinvars = c("prediction_condition"),
idvar = "participant")
data_agg_exp1_acc$prediction_accuracy<-relevel(data_agg_exp1_acc$prediction_accuracy,
"Incorrect")
gplot_exp1_pred<-ggplot(data_agg_exp1, aes( x=prediction_condition, y=rec_acc))+
geom_bar(aes(prediction_condition, rec_acc, fill = prediction_condition),
position="dodge",stat="summary", fun.y="mean", SE=F)+
geom_jitter(width = 0.20 )+
geom_errorbar(aes(y = rec_acc, ymin = rec_acc - se, ymax = rec_acc + se),
color = "black", width = 0.10, data=dat_summary_exp1)+
#facet_wrap(experiment~.)+
theme_classic()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20)
)+
xlab("Contingency")+
ggtitle("Experiment 1")+
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_manual(values =   c("#DDCC77", "#CC6677","#117733"))
gplot_exp1_pred
# save it
ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/",
"PREMUP_computational/computational_model/figures/prediction_cond_exp1.png"),
width = 7, height = 7)
# is that significant?
exp1$prediction_condition<-as.factor(exp1$prediction_condition)
modexp1_prediction<-glmer(recognition_accuracy~prediction_condition+(prediction_condition  | participant),
family = binomial, data = exp1)
summary(modexp1_prediction)
Anova(modexp1_prediction)
data_agg_exp1_acc$prediction_accuracy<-ifelse(data_agg_exp1_acc$prediction_accuracy ==0, "Incorrect",
"Correct")
dat_summary_exp1_acc <- summarySEwithin(data_agg_exp1_acc,
measurevar = "rec_acc",
withinvars = c( "prediction_accuracy"),
idvar = "participant")
data_agg_exp1_acc$prediction_accuracy<-as.factor(data_agg_exp1_acc$prediction_accuracy)
gplot_exp1_acc<-ggplot(data_agg_exp1_acc, aes( x=prediction_accuracy, y=rec_acc))+
geom_bar(aes(prediction_accuracy, rec_acc, fill = prediction_accuracy),
position="dodge",stat="summary", fun.y="mean", SE=F)+
geom_errorbar(aes(y = rec_acc, ymin = rec_acc - se, ymax = rec_acc + se),
color = "black", width = 0.10, data=dat_summary_exp1_acc)+
#facet_wrap(experiment~.)+
geom_jitter(width = 0.20 )+
theme_bw()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20)
)+
ylim(0,1)+
xlab("Prediction Outcome")+
ggtitle("Experiment 1")+
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_viridis(discrete=TRUE, option = "plasma")
gplot_exp1_acc
# save it
ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/",
"PREMUP_computational/computational_model/figures/prediction_acc_exp1.png"),
width = 7, height = 7)
# is that significant?
modexp1_acc<-glmer(recognition_accuracy~prediction_accuracy+(prediction_accuracy  | participant),
family = binomial, data = exp1)
summary(modexp1_acc)
Anova(modexp1_acc)
exp1$prediction_accuracy<-ifelse(exp1$prediction_accuracy==0,
"Incorrect", "Correct")
exp1$prediction_accuracy<-factor(exp1$prediction_accuracy,
ordered=F)
exp1$prediction_accuracy<-relevel(exp1$prediction_accuracy,
"Incorrect")
data_agg_exp1_pred_acc<-exp1 %>%
group_by(  prediction_accuracy, participant, prediction_condition) %>%
dplyr::summarise(rec_acc = mean(recognition_accuracy, na.rm = T),
experiment = first(experiment))
data_summary_exp1_pred_acc <- summarySEwithin(data_agg_exp1_pred_acc,
measurevar = "rec_acc",
withinvars = c( "prediction_accuracy",
"prediction_condition"),
idvar = "participant")
gplot_exp1_pred_acc<-ggplot(data_agg_exp1_pred_acc, aes( x=prediction_condition, y=rec_acc))+
geom_bar(aes(prediction_condition, rec_acc, fill = prediction_condition),
position="dodge",stat="summary", fun.y="mean", SE=F)+
geom_jitter(width = 0.20, alpha = 0.3 )+
geom_errorbar(aes(y = rec_acc, ymin = rec_acc - se, ymax = rec_acc + se),
color = "black", width = 0.10, data=data_summary_exp1_pred_acc)+
#facet_wrap(experiment~.)+
theme_classic()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 30),
axis.title.x = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.text=element_text(size=28)
)+
theme(strip.text.x = element_text(size = 28))+
xlab("Contingency")+
ggtitle("Experiment 1")+
facet_wrap(.~prediction_accuracy)+
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_manual(values =   c("#DDCC77", "#CC6677","#117733"))
gplot_exp1_pred_acc
#------------------------------------------------------------------------
# accuracy by prediction
data_agg_exp1_acc_pred<-exp1 %>%
group_by(  prediction_accuracy,prediction_condition,  participant) %>%
dplyr::summarise(rec_acc = mean(recognition_accuracy, na.rm = T),
experiment = first(experiment))
dat_summary_exp1_acc_pred <- summarySEwithin(data_agg_exp1_acc_pred,
measurevar = "rec_acc",
withinvars = c( "prediction_accuracy", "prediction_condition"),
idvar = "participant")
# rename the levels of prediction accuracy
data_agg_exp1_acc_pred$prediction_accuracy<-factor(data_agg_exp1_acc_pred$prediction_accuracy,
ordered= F)
data_agg_exp1_pred_acc$prediction_accuracy<-relevel(data_agg_exp1_pred_acc$prediction_accuracy,
"Incorrect")
gplot_exp1_pred_acc<-ggplot(data_agg_exp1_acc_pred, aes( x=prediction_accuracy, y=rec_acc))+
geom_bar(aes(prediction_accuracy, rec_acc, fill = prediction_accuracy),
position="dodge",stat="summary", fun.y="mean", SE=F)+
geom_errorbar(aes(y = rec_acc, ymin = rec_acc - se, ymax = rec_acc + se),
color = "black", width = 0.10, data=dat_summary_exp1_acc_pred)+
facet_wrap(prediction_condition~.)+
geom_jitter(width = 0.20, alpha = 0.3 )+
theme_classic()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20),
strip.text.x = element_text(size = 20)
)+
ylim(0,1)+
xlab("Prediction Condition")+
ggtitle("Experiment 1")+
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_manual(values =   c("#DDCC77", "#CC6677"))
gplot_exp1_pred_acc
# as a function of predicted contingency
data_agg_exp1_pred_cont<-exp1 %>%
group_by(  prediction_accuracy, participant, predicted_contingency) %>%
dplyr::summarise(rec_acc = mean(recognition_accuracy, na.rm = T),
experiment = first(experiment))
data_summary_exp1_pred_cont<- summarySEwithin(data_agg_exp1_pred_cont,
measurevar = "rec_acc",
withinvars = c( "prediction_accuracy",
"predicted_contingency"),
idvar = "participant")
gplot_exp1_pred_cont<-ggplot(data_agg_exp1_pred_cont, aes( x=predicted_contingency, y=rec_acc))+
geom_bar(aes(predicted_contingency, rec_acc, fill = predicted_contingency),
position="dodge",stat="summary", fun.y="mean", SE=F)+
#geom_jitter(width = 0.20, alpha = 0.40 )+
geom_errorbar(aes(y = rec_acc, ymin = rec_acc - se, ymax = rec_acc + se),
color = "black", width = 0.10, data=data_summary_exp1_pred_cont)+
#facet_wrap(experiment~.)+
theme_classic()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20)
)+
theme(strip.text.x = element_text(size = 18))+
xlab("Predicted Contingency")+
ggtitle("Experiment 1")+
facet_wrap(.~prediction_accuracy)+
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_manual(values =   c("#DDCC77", "#CC6677","#117733"))
gplot_exp1_pred_cont
#-----------------Experiment2------------------------------------------------#
# exclude participants with low performance in phase1
exclPhase1exp2<-c(3 ,13, 28, 36, 39)
exp2<-exp2[!exp2$participant %in% exclPhase1exp2, ]
### aggregate
# take the se within-participant
exp2$prediction_accuracy<-ifelse(exp2$prediction_accuracy==0, "Incorrect",
"Correct")
data_agg_exp2<-exp2 %>%
group_by(prediction_condition, participant) %>%
dplyr::summarise(rec_acc = mean(recognition_accuracy, na.rm = T),
experiment = first(experiment))
data_agg_exp2_acc<-exp2 %>%
group_by(  prediction_accuracy, participant) %>%
dplyr::summarise(rec_acc = mean(recognition_accuracy, na.rm = T),
experiment = first(experiment))
library(Rmisc)
dat_summary_exp2_acc<- summarySEwithin(data_agg_exp2_acc,
measurevar = "rec_acc",
withinvars = c("prediction_accuracy"),
idvar = "participant")
gplot_exp2_pred<-ggplot(data_agg_exp2_acc, aes( x=prediction_accuracy, y=rec_acc))+
geom_bar(aes(prediction_accuracy, rec_acc, fill = prediction_accuracy),
position="dodge",stat="summary", fun.y="mean", SE=F)+
geom_errorbar(aes(y = rec_acc, ymin = rec_acc - se, ymax = rec_acc + se),
color = "black", width = 0.10, data=dat_summary_exp2_acc)+
geom_jitter(width = 0.20 )+
#facet_wrap(experiment~.)+
theme_bw()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20)
)+
xlab("Contingency")+
ggtitle("Experiment 2")+
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_viridis(discrete=TRUE, option = "magma")
gplot_exp2_pred
# is that significant?
exp2$prediction_condition<-as.factor(exp2$prediction_condition)
modexp2_prediction<-glmer(recognition_accuracy~prediction_condition+(prediction_condition  | participant),
family = binomial, data = exp2)
summary(modexp2_prediction)
Anova(modexp2_prediction)
library(lsmeans)
# define contrasts
lsmeans(modexp2_prediction, pairwise~prediction_condition, adjust =
"bonferroni")
strVflat = c(-1,1,0)
strVweak=c(-1,0,1)
flatVweak = c(1, 0,1)
contrasts(exp2$prediction_condition)<-cbind(strVflat,strVweak,flatVweak)
modexp2_prediction<-glmer(recognition_accuracy~prediction_condition+(prediction_condition  | participant),
family = binomial, data = exp2)
summary(modexp2_prediction)
Anova(modexp2_prediction)
library(lsmeans)
# define contrasts
lsmeans(modexp2_prediction, pairwise~prediction_condition, adjust =
"bonferroni")
strVflat = c(-1,1,0)
strVweak=c(-1,0,1)
flatVweak = c(1, 0,1)
contrasts(exp2$prediction_condition)<-cbind(strVflat,strVweak,flatVweak)
modexp2_prediction<-glmer(recognition_accuracy~prediction_condition+(prediction_condition  | participant),
family = binomial, data = exp2)
summary(modexp2_prediction)
# accuracy now
levels(data_agg_exp2_acc$prediction_accuracy)<-c("Incorrect", "Correct")
data_agg_exp2_acc$prediction_accuracy<-ifelse(data_agg_exp2_acc$prediction_accuracy ==0,
"Incorrect", "Correct")
exp2$prediction_accuracy<-as.factor(exp2$prediction_accuracy)
dat_summary_exp2_acc <- summarySEwithin(data_agg_exp2_acc,
measurevar = "rec_acc",
withinvars = c( "prediction_accuracy"),
idvar = "participant")
data_agg_exp2_acc$prediction_accuracy<-as.factor(data_agg_exp2_acc$prediction_accuracy)
gplot_exp2_acc<-ggplot(data_agg_exp2_acc, aes( x=prediction_accuracy, y=rec_acc))+
geom_bar(aes(prediction_accuracy, rec_acc, fill = prediction_accuracy),
position="dodge",stat="summary", fun.y="mean", SE=F)+
geom_errorbar(aes(y = rec_acc, ymin = rec_acc - se, ymax = rec_acc + se),
color = "black", width = 0.10, data=dat_summary_exp2_acc)+
geom_jitter(width = 0.20)+
#facet_wrap(experiment~.)+
theme_bw()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20)
)+
ylim(0,1)+
xlab("Prediction Outcome")+
ggtitle("Experiment 2")+
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_viridis(discrete=TRUE, option = "plasma")
gplot_exp2_acc
#-------------------------------------------------------------------------
# Prediction condition and prediction acc
dat_summary_exp1_acc_pred <- summarySEwithin(data_agg_exp1_acc_pred,
measurevar = "rec_acc",
withinvars = c( "prediction_accuracy", "prediction_condition"),
idvar = "participant")
data_agg_exp1_acc_pred$prediction_accuracy<-as.factor(data_agg_exp1_acc_pred$prediction_accuracy)
gplot_exp1_pred_acc<-ggplot(data_agg_exp1_acc_pred, aes( x=prediction_accuracy, y=rec_acc))+
geom_bar(aes(prediction_accuracy, rec_acc, fill = prediction_accuracy),
position="dodge",stat="summary", fun.y="mean", SE=F)+
geom_errorbar(aes(y = rec_acc, ymin = rec_acc - se, ymax = rec_acc + se),
color = "black", width = 0.10, data=dat_summary_exp1_acc_pred)+
facet_wrap(prediction_condition~.)+
theme_bw()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20)
)+
xlab("Prediction Condition")+
ylim(0,1)+
ggtitle("Experiment 1")+
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_viridis(discrete=TRUE, option = "magma")
gplot_exp1_pred_acc
gplot_exp2_acc
##---------------------------------------------------------
# accuracy by prediction
data_agg_exp2_acc_pred<-exp2 %>%
group_by(  prediction_accuracy,prediction_condition,  participant) %>%
dplyr::summarise(rec_acc = mean(recognition_accuracy, na.rm = T),
experiment = first(experiment))
dat_summary_exp2_acc_pred <- summarySEwithin(data_agg_exp2_acc_pred,
measurevar = "rec_acc",
withinvars = c( "prediction_accuracy", "prediction_condition"),
idvar = "participant")
# rename the levels of prediction accuracy
data_agg_exp2_acc_pred$prediction_accuracy<-as.factor(data_agg_exp2_acc_pred$prediction_accuracy)
levels(data_agg_exp2_acc_pred$prediction_accuracy)<-c("Incorrect", "Correct")
gplot_exp2_pred_acc<-ggplot(data_agg_exp2_acc_pred, aes( x=prediction_accuracy, y=rec_acc))+
geom_bar(aes(prediction_accuracy, rec_acc, fill = prediction_accuracy),
position="dodge",stat="summary", fun.y="mean", SE=F)+
geom_errorbar(aes(y = rec_acc, ymin = rec_acc - se, ymax = rec_acc + se),
color = "black", width = 0.10, data=dat_summary_exp2_acc_pred)+
facet_wrap(prediction_accuracy~.)+
theme_bw()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20),
strip.text.x = element_text(size = 20)
)+
ylim(0,1)+
xlab("Prediction Condition")+
ggtitle("Experiment 2")+
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_viridis(discrete=TRUE, option = "plasma")
gplot_exp2_pred_acc
# save it
ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/",
"PREMUP_computational/computational_model/figures/prediction_acc_exp2.png"),
width = 9, height = 7)
# is that significant?
exp2$prediction_accuracy<-as.factor(exp2$prediction_accuracy)
modexp2_acc_pred<-glmer(recognition_accuracy~prediction_accuracy*prediction_condition
+(prediction_accuracy*prediction_condition  | participant),
family = binomial, data = exp2,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(modexp2_acc_pred)
# break down the interaction
odexp2_acc_pred_Weak<-glmer(recognition_accuracy~prediction_accuracy
+(prediction_accuracy  | participant),
family = binomial, data = exp2[exp2$prediction_condition=="Weak"],
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(odexp2_acc_pred_Weak)
#accuracy by prediction condition
data_agg_exp2_pred_acc<-exp2 %>%
group_by( prediction_accuracy, participant, prediction_condition) %>%
dplyr::summarise(rec_acc = mean(recognition_accuracy, na.rm = T),
experiment = first(experiment))
data_summary_exp2_pred_acc <- summarySEwithin(data_agg_exp2_pred_acc,
measurevar = "rec_acc",
withinvars = c( "prediction_accuracy",
"prediction_condition"),
idvar = "participant")
data_agg_exp2_pred_acc$prediction_accuracy<-relevel(data_agg_exp2_pred_acc$prediction_accuracy,
"Incorrect")
gplot_exp2_pred_acc<-ggplot(data_agg_exp2_pred_acc, aes( x=prediction_condition, y=rec_acc))+
geom_bar(aes(prediction_condition, rec_acc, fill = prediction_condition),
position="dodge",stat="summary", fun.y="mean", SE=F)+
#geom_jitter(width = 0.20, alpha = 0.3 )+
geom_errorbar(aes(y = rec_acc, ymin = rec_acc - se, ymax = rec_acc + se),
color = "black", width = 0.10, data=data_summary_exp2_pred_acc)+
#facet_wrap(experiment~.)+
theme_classic()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20)
)+
xlab("Contingency")+
ggtitle("Experiment 2")+
facet_wrap(.~prediction_accuracy)+
theme(plot.title = element_text(hjust = 0.5))+
theme(strip.text.x = element_text(size = 18))+
scale_fill_manual(values =   c("#DDCC77","#88CCEE", "#AA4499","#44AA99","#332288"))
gplot_exp2_pred_acc
# --------------- predicted category
# as a function of predicted contingency
data_agg_exp2_pred_cont<-exp2 %>%
group_by(  prediction_accuracy, participant, predicted_contingency) %>%
dplyr::summarise(rec_acc = mean(recognition_accuracy, na.rm = T),
experiment = first(experiment))
data_summary_exp2_pred_cont<- summarySEwithin(data_agg_exp2_pred_cont,
measurevar = "rec_acc",
withinvars = c( "prediction_accuracy",
"predicted_contingency"),
idvar = "participant")
gplot_exp2_pred_cont<-ggplot(data_agg_exp2_pred_cont, aes( x=predicted_contingency, y=rec_acc))+
geom_bar(aes(predicted_contingency, rec_acc, fill = predicted_contingency),
position="dodge",stat="summary", fun.y="mean", SE=F)+
#geom_jitter(width = 0.20, alpha = 0.40 )+
geom_errorbar(aes(y = rec_acc, ymin = rec_acc - se, ymax = rec_acc + se),
color = "black", width = 0.10, data=data_summary_exp1_pred_cont)+
#facet_wrap(experiment~.)+
theme_classic()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20)
)+
theme(strip.text.x = element_text(size = 18))+
xlab("Predicted Contingency")+
ggtitle("Experiment 1")+
facet_wrap(.~prediction_accuracy)+
theme(plot.title = element_text(hjust = 0.5))
gplot_exp2_pred_cont
gplot_exp2_pred_cont<-ggplot(data_agg_exp2_pred_cont, aes( x=predicted_contingency, y=rec_acc))+
geom_bar(aes(predicted_contingency, rec_acc, fill = predicted_contingency),
position="dodge",stat="summary", fun.y="mean", SE=F)+
#geom_jitter(width = 0.20, alpha = 0.40 )+
geom_errorbar(aes(y = rec_acc, ymin = rec_acc - se, ymax = rec_acc + se),
color = "black", width = 0.10, data=data_summary_exp2_pred_cont)+
#facet_wrap(experiment~.)+
theme_classic()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20)
)+
theme(strip.text.x = element_text(size = 18))+
xlab("Predicted Contingency")+
ggtitle("Experiment 1")+
facet_wrap(.~prediction_accuracy)+
theme(plot.title = element_text(hjust = 0.5))
gplot_exp2_pred_cont
gplot_exp2_pred_cont<-ggplot(data_agg_exp2_pred_cont, aes( x=predicted_contingency, y=rec_acc))+
geom_bar(aes(predicted_contingency, rec_acc, fill = predicted_contingency),
position="dodge",stat="summary", fun.y="mean", SE=F)+
#geom_jitter(width = 0.20, alpha = 0.40 )+
geom_errorbar(aes(y = rec_acc, ymin = rec_acc - se, ymax = rec_acc + se),
color = "black", width = 0.10, data=data_summary_exp2_pred_cont)+
#facet_wrap(experiment~.)+
theme_classic()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20)
)+
theme(strip.text.x = element_text(size = 18))+
xlab("Predicted Contingency")+
ggtitle("Experiment 2")+
facet_wrap(.~prediction_accuracy)+
theme(plot.title = element_text(hjust = 0.5))
gplot_exp2_pred_cont<-ggplot(data_agg_exp2_pred_cont, aes( x=predicted_contingency, y=rec_acc))+
geom_bar(aes(predicted_contingency, rec_acc, fill = predicted_contingency),
position="dodge",stat="summary", fun.y="mean", SE=F)+
#geom_jitter(width = 0.20, alpha = 0.40 )+
geom_errorbar(aes(y = rec_acc, ymin = rec_acc - se, ymax = rec_acc + se),
color = "black", width = 0.10, data=data_summary_exp2_pred_cont)+
#facet_wrap(experiment~.)+
theme_classic()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20)
)+
theme(strip.text.x = element_text(size = 18))+
xlab("Predicted Contingency")+
ggtitle("Experiment 2")+
facet_wrap(.~prediction_accuracy)+
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_manual(values =   c("#DDCC77","#88CCEE", "#AA4499","#44AA99","#332288"))
gplot_exp2_pred_cont
install.packages("freesurferformats")
