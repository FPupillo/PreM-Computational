width = 7, height = 7)
# analyse
PEbyAccExp1<-glmer(id_acc~PE*trial_acc+(trial_acc*PE|SubNum), family= binomial,
data = exp1,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(PEbyAccExp1)
Anova(PEbyAccExp1)
# in the positive side
PEbyAccExp1Pos<-glmer(id_acc~PE+(PE|SubNum), family= binomial,
data = exp1[exp1$trial_acc=="Correct",],
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(PEbyAccExp1Pos)
# in the negative side
PEbyAccExp1Neg<-glmer(id_acc~PE+(PE|SubNum), family= binomial,
data = exp1[exp1$trial_acc=="Incorrect",],
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(PEbyAccExp1Neg)
# analyse
PEbyAccExp2<-glmer(id_acc~PE*trial_acc+(trial_acc*PE|SubNum), family= binomial,
data = exp2,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(PEbyAccExp2)
Anova(PEbyAccExp2)
# in the positive side
PEbyAccExp2Pos<-glmer(id_acc~PE+(PE|SubNum), family= binomial,
data = exp2[exp2$trial_acc=="Correct",],
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(PEbyAccExp2Pos)
# in the negative side
PEbyAccExp2Neg<-glmer(id_acc~PE+(PE|SubNum), family= binomial,
data = exp2[exp2$trial_acc=="Incorrect",],
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(PEbyAccExp2Neg)
exp1$exp<-"Experiment1"
exp2$exp<-"Experiment2"
exp2$session<-as.character(exp2$session)
exp1$session<-as.character(exp1$session)
exp1$PE_level<-as.character(exp1$PE_level)
exp2$PE_level<-as.character(exp2$PE_level)
exp1$scn_condition<-as.character(exp1$scn_condition)
exp2$scn_condition<-as.character(exp2$scn_condition)
# threeFeedb.exc$session<-as.factor(threeFeedb.exc$session)
# levels(threeFeedb.exc$session) <- c("ImmediateRec", "DelayedRec")
#exp2$SubNum<-exp2$SubNum+max(unique(exp1$SubNum))
# retrieve the learning rate
# experiment 1
# learning rate
exp1lr<-fread(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/PREMUP_computational/exp1/outputs/group_level/computational_model/",
"ParameterEstimation.exp1.betalimit=10.initialQ=0.33.fLR_Instr.csv"))
# select the first three rows
exp1lr<-exp1lr[,1:3]
# change the name of the variable indicating the participant
names(exp1lr)[1]<-"SubNum"
exp1<-merge(exp1, exp1lr, by = "SubNum")
# exp 2
exp2lr<-fread(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/PREMUP_computational/exp2/outputs/group_level/computational_model/",
"ParameterEstimation.exp2.betalimit=10.initialQ=0.5.fLR_Instr.csv"))
# select the first three rows
exp2lr<-exp2lr[,1:3]
# change the name of the variable indicating the participant
names(exp2lr)[1]<-"SubNum"
exp2<-merge(exp2, exp2lr, by = "SubNum")
# add "2" in front of the subnum
exp2$SubNum<-exp2$SubNum+200
exp2<-exp2[, names(exp1)]
# merge thetwo
allData<-data.frame(rbind(exp1,exp2 ))
# how many trials per participant
allData %>%
group_by(SubNum) %>%
tally()
setwd(dirname(getwd()))
getwd()
write.csv(allData, paste0(abs,"/fittedData_exp1-exp2_fLR_Instr.csv"))
# plot merged data
PEDistrExp<-ggplot(allData, aes(x= PE, fill="scn_condition"))
plot2<-
PEDistrExp+geom_density(alpha=.4)+
#facet_grid( ~ scn_condition)+
#ggtitle("PE distribution, Experiment 1")
theme_classic()+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20)
)+
#annotate(geom="text",  label="b",size=8,family="serif")+
#guides(fill=guide_legend(title="Scene Condition"))+
scale_fill_viridis_d(name ="Contingencies",breaks =c("Flat", "Strong", "Weak"),
labels=c("0.33/0.50","0.80/0.90","0.70"))
plot2
ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/PE_instr_distr.exp1.exp2.png"),
width = 7, height = 7)
# now without the contingencies
PEDistrExpN<-ggplot(allData, aes(x= PE, fill = ""))
PEDistrExpN+
geom_histogram(aes(y = ..density..),
colour = 1, fill = "white") +
geom_density(alpha=.4,show.legend = FALSE)+
#facet_grid( ~ scn_condition)+
#ggtitle("PE distribution, Experiment 1")
theme_classic()+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20)
)+
scale_fill_viridis_d()
ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/PE_instr_distrNOscene.exp1.exp2.png"),
width = 7, height = 7)
#annotate(geom="text",  label="b",size=8,family="serif")+
#guides(fill=guide_legend(title="Scene Condition"))+
#scale_fill_discrete(name ="Contingencies",breaks =c("Flat", "Strong", "Weak"),
#                    labels=c("0.33/0.50","0.80/0.90","0.70"))
#ylab("")+
#scale_fill_viridis_d()
# plot it first
print(
ggplot(allData, aes( x=PE, y=id_acc))+
geom_line(stat="smooth",method = "glm", formula=y~x,method.args=list(family="binomial"), alpha=0.5)+
aes(colour = factor(SubNum), alpha=0.3)+
geom_smooth(method="glm",formula=y~x,method.args=list(family="binomial"), colour="black", se=T)+
theme(strip.text.x = element_text(size = 13))+ ylim(c(0,1))+
facet_grid(.~trial_acc)+
theme_classic()+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=13),
)+
theme(strip.text.x = element_text(size = 22))+
#ggtitle("Experiment 2")+
theme(legend.position = "none")+
ylab("p(Hit)")
)
# save it
ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/PE_mem_fLR_instr.exp1.exp2.png"),
width = 7, height = 7)
# analyse
PEbyAccAll<-glmer(id_acc~PE*trial_acc*alpha*exp+(trial_acc*PE|SubNum), family= binomial,
data = allData,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(PEbyAccAll)
Anova(PEbyAccAll, type = "III")
# we need to center PE
allData$PE.c <- scale(allData$PE, center=TRUE, scale=FALSE)
allData$alpha.c <- scale(allData$alpha, center=TRUE, scale=FALSE)
allData$exp.c <- ifelse(allData$exp == "Experiment1", -0.5, 0.5)
allData$trial_acc.c <- ifelse(allData$trial_acc == "Incorrect", -0.5, 0.5)
# plot it again
print(
ggplot(allData, aes( x=PE.c, y=id_acc))+
geom_line(stat="smooth",method = "glm", formula=y~x,method.args=list(family="binomial"), alpha=0.5)+
aes(colour = factor(SubNum), alpha=0.3)+
geom_smooth(method="glm",formula=y~x,method.args=list(family="binomial"), colour="black", se=T)+
theme(strip.text.x = element_text(size = 13))+ ylim(c(0,1))+
facet_grid(.~trial_acc)+
theme_classic()+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20)
)+
#ggtitle("Experiment 2")+
theme(legend.position = "none")+
ylab("p(Hit)")
)
PEbyAccAll.c<-glmer(id_acc~PE.c*trial_acc.c*alpha.c*exp.c+(trial_acc.c*PE.c|SubNum), family= binomial,
data = allData,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(PEbyAccAll.c)
# exponentiate the beta for OR
betas<-as.data.frame(summary(PEbyAccAll.c)$coefficients)
OR<-cbind(row.names(betas),exp(betas$Estimate))
Anova(PEbyAccAll.c, type = "III")
# get bootstrapped confidenceßß intervals
#CI<-confint(PEbyAccAll.c, method=c("boot"), boot.type=c("norm"))
# save the bootstrapped confidence intervals, as it it a very time consuming computation
#save(CI, file = "CI.Rdata")
# load the data
load("CI.Rdata")
# exponentiate them
exp(CI)
CI
intervals(PEbyAccAll.c)
plot2
plot2
# plot merged data
PEDistrExp<-ggplot(allData, aes(x= PE, fill="scn_condition"))
plot2<-
PEDistrExp+geom_density(alpha=.4)+
#facet_grid( ~ scn_condition)+
#ggtitle("PE distribution, Experiment 1")
theme_classic()+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20)
)+
#annotate(geom="text",  label="b",size=8,family="serif")+
#guides(fill=guide_legend(title="Scene Condition"))+
scale_fill_viridis_d(name ="Contingencies",breaks =c("Flat", "Strong", "Weak"),
labels=c("0.33/0.50","0.80/0.90","0.70"))
plot2
# now without the contingencies
PEDistrExpN<-ggplot(allData, aes(x= PE, fill = ""))
PEDistrExpN+
geom_histogram(aes(y = ..density..),
colour = 1, fill = "white") +
geom_density(alpha=.4,show.legend = FALSE)+
#facet_grid( ~ scn_condition)+
#ggtitle("PE distribution, Experiment 1")
theme_classic()+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20)
)+
scale_fill_viridis_d()
PEDistrExpN<-ggplot(allData, aes(x= PE, fill = ""))
PEDistrExpN+
geom_histogram(aes(y = ..density..),
colour = 1, fill = "white") +
geom_density(alpha=.4,show.legend = FALSE)+
#facet_grid( ~ scn_condition)+
#ggtitle("PE distribution, Experiment 1")
theme_classic()+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20)
)+
scale_fill_viridis_d()
ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/PE_instr_distrNOscene.exp1.exp2.png"),
width = 5, height = 5)
# now without the histogram
PEDistrExpN<-ggplot(allData, aes(x= PE, fill = ""))
PEDistrExpN+
geom_histogram(aes(y = ..density..),
colour = 1, fill = "white") +
geom_density(alpha=.4,show.legend = FALSE)+
#facet_grid( ~ scn_condition)+
#ggtitle("PE distribution, Experiment 1")
theme_classic()+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=13)
)+
scale_fill_viridis_d()
ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/PE_instr_distrNOscene.exp1.exp2.png"),
width = 5, height = 5)
print(
ggplot(allData, aes( x=PE, y=id_acc))+
geom_line(stat="smooth",method = "glm", formula=y~x,method.args=list(family="binomial"), alpha=0.5)+
aes(colour = factor(SubNum), alpha=0.3)+
geom_smooth(method="glm",formula=y~x,method.args=list(family="binomial"), colour="black", se=T)+
theme(strip.text.x = element_text(size = 13))+ ylim(c(0,1))+
facet_grid(.~trial_acc)+
theme_classic()+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=13),
)+
theme(strip.text.x = element_text(size = 22))+
theme(panel.spacing = unit(2, "lines"))+
#ggtitle("Experiment 2")+
theme(legend.position = "none")+
ylab("p(Hit)")
)
print(
ggplot(allData, aes( x=PE, y=id_acc))+
geom_line(stat="smooth",method = "glm", formula=y~x,method.args=list(family="binomial"), alpha=0.5)+
aes(colour = factor(SubNum), alpha=0.3)+
geom_smooth(method="glm",formula=y~x,method.args=list(family="binomial"), colour="black", se=T)+
theme(strip.text.x = element_text(size = 13))+ ylim(c(0,1))+
facet_grid(.~trial_acc)+
theme_classic()+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=13),
)+
theme(strip.text.x = element_text(size = 22))+
theme(panel.spacing = unit(1.5, "lines"))+
#ggtitle("Experiment 2")+
theme(legend.position = "none")+
ylab("p(Hit)")
)
# plot it first
print(
ggplot(allData, aes( x=PE, y=id_acc))+
geom_line(stat="smooth",method = "glm", formula=y~x,method.args=list(family="binomial"), alpha=0.5)+
aes(colour = factor(SubNum), alpha=0.3)+
geom_smooth(method="glm",formula=y~x,method.args=list(family="binomial"), colour="black", se=T)+
theme(strip.text.x = element_text(size = 13))+ ylim(c(0,1))+
facet_grid(.~trial_acc)+
theme_classic()+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=13),
)+
theme(strip.text.x = element_text(size = 22))+
theme(panel.spacing = unit(1.2, "lines"))+
#ggtitle("Experiment 2")+
theme(legend.position = "none")+
ylab("p(Hit)")
)
print(
ggplot(allData, aes( x=PE, y=id_acc))+
geom_line(stat="smooth",method = "glm", formula=y~x,method.args=list(family="binomial"), alpha=0.5)+
aes(colour = factor(SubNum), alpha=0.3)+
geom_smooth(method="glm",formula=y~x,method.args=list(family="binomial"), colour="black", se=T)+
theme(strip.text.x = element_text(size = 13))+ ylim(c(0,1))+
facet_grid(.~trial_acc)+
theme_classic()+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=13),
)+
theme(strip.text.x = element_text(size = 22))+
theme(panel.spacing = unit(1, "lines"))+
#ggtitle("Experiment 2")+
theme(legend.position = "none")+
ylab("p(Hit)")
)
# save it
ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/PE_mem_fLR_instr.exp1.exp2.png"),
width = 7, height = 7)
binnedData<-vector()
for (s in unique(allData$SubNum)){
tryCatch({
# subset participant
currdf<-allData[allData$SubNum==s,]
#for (PElev in unique(currdf$PE_level)){
#currdfPE<-currdf[currdf$PE_level==PElev,]
for (trial_acc in c("Correct","Incorrect")){
currfacc<-currdf[currdf$trial_acc==trial_acc,]
# sort them
#currdfPEacc<-currdfPEacc[order(currdfPEacc$PEobs),]
# get quantiles
quantiles<-quantile(currfacc$PE)
# assign quantiles
currfacc$quantile<-NA
for (n in 1:nrow(currfacc)){
if (currfacc$PE[n]>=quantiles[1] & currfacc$PE[n]<quantiles[2]){
currfacc$quantile[n]<-1
} else if(currfacc$PE[n]>=quantiles[2] & currfacc$PE[n]<quantiles[3]){
currfacc$quantile[n]<-2
} else if (currfacc$PE[n]>=quantiles[3] & currfacc$PE[n]<quantiles[4]){
currfacc$quantile[n]<-3
} else if (currfacc$PE[n]>=quantiles[4] ){
currfacc$quantile[n]<-4
}
}
# create mean of id_acc and P by quantile
df<-currfacc %>%
group_by(quantile) %>%
dplyr::summarise(PE = mean(PE), id_acc = mean(id_acc),
#PE_level = unique(PE_level),
SubNum = unique(SubNum),
trial_acc = unique(trial_acc),
exp = unique(exp))
binnedData<-rbind(binnedData, as.data.frame(df))
}
},  error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
}
# visualize
binnedData$quantile<-as.factor(binnedData$quantile)
binnedData$bin<-(binnedData$quantile)
# plot
PlotBind<-ggplot(binnedData, aes(x= PE, fill=bin))
print(
PlotBind+geom_density()+ facet_grid( trial_acc~ exp)+theme_classic()
)+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20)
)+
scale_fill_viridis_d()
ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/PEdistr_binned.png"),
width = 7, height = 7)
ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/PEdistr_binned.png"),
width = 9, height = 7)
PlotBind<-ggplot(binnedData, aes(x= PE, fill=bin))
print(
PlotBind+geom_density()+ facet_grid( trial_acc~ exp)+theme_classic()
)+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20)
)+
scale_fill_viridis_d()+
theme(panel.spacing = unit(1, "lines"))
PlotBind<-ggplot(binnedData, aes(x= PE, fill=bin))
print(
PlotBind+geom_density()+ facet_grid( trial_acc~ exp)+theme_classic()
)+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20)
)+
scale_fill_viridis_d()+
theme(panel.spacing = unit(1.2, "lines"))
ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/PEdistr_binned.png"),
width = 7, height = 7)
# plot
PlotBind<-ggplot(binnedData, aes(x= PE, fill=bin))
print(
PlotBind+geom_density()+ facet_grid( trial_acc~ exp)+theme_classic()
)+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20)
)+
scale_fill_viridis_d()+
theme(panel.spacing = unit(1.5, "lines"))
ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/PEdistr_binned.png"),
width = 7, height = 7)
PlotBind<-ggplot(binnedData, aes(x= PE, fill=bin))
print(
PlotBind+geom_density()+ facet_grid( trial_acc~ exp)+theme_classic()
)+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=15)
)+
scale_fill_viridis_d()+
theme(panel.spacing = unit(1, "lines"))
PlotBind<-ggplot(binnedData, aes(x= PE, fill=bin))
print(
PlotBind+geom_density()+ facet_grid( trial_acc~ exp)+theme_classic()
)+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=13)
)+
scale_fill_viridis_d()+
theme(panel.spacing = unit(1, "lines"))
ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/PEdistr_binned.png"),
width = 7, height = 7)
# take the se within-participant
data_agg<-binnedData %>%
group_by(bin,  trial_acc, SubNum) %>%
dplyr::summarise(id_acc = mean(id_acc, na.rm = T))
# take the se within-participant
data_agg<-binnedData %>%
group_by(bin,  trial_acc, SubNum) %>%
dplyr::summarise(id_acc = mean(id_acc, na.rm = T))
library(Rmisc)
library(Rmisc)
dat_summary <- summarySEwithin(data_agg,
measurevar = "id_acc",
withinvars = c("bin", "trial_acc"),
idvar = "SubNum")
gplotquant<-ggplot(data_agg, aes( x=bin, y=id_acc))+
geom_bar(aes(bin, id_acc, fill = bin),
position="dodge",stat="summary", fun.y="mean", SE=F)+
geom_errorbar(aes(y = id_acc, ymin = id_acc - se, ymax = id_acc + se),
color = "black", width = 0.10, data=dat_summary)+
facet_wrap(trial_acc~.)+
theme_classic()+
ylab("% Hit")+
theme(legend.position = "none")+
scale_fill_viridis_d(option = "cividis")
data_agg$bin<-as.factor(data_agg$bin)
gplotquant<-ggplot(data_agg, aes( x=bin, y=id_acc))+
geom_bar(aes(bin, id_acc, fill = bin),
position="dodge",stat="summary", fun.y="mean", SE=F)+
geom_errorbar(aes(y = id_acc, ymin = id_acc - se, ymax = id_acc + se),
color = "black", width = 0.10, data=dat_summary)+
facet_wrap(trial_acc~.)+
theme_classic()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=13)
)+
scale_fill_viridis_d(option = "cividis")
print(gplotquant)
ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/binnedPE_mem.png"),
width = 7, height = 7)
