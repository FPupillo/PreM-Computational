distr_all2<-rbind(null_distr2, exp2SDT)
# plot
PlotBind2<-ggplot(distr_all2, aes(x= dprime, fill=type))
#library(plyr)
PlotBind2+geom_density(alpha = .5)+theme_bw()+geom_boxplot()+
geom_vline(xintercept = thres2)+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20)
)+
xlab("d'")+
theme(legend.position = "none")+
ggtitle("Experiment 2")+
scale_fill_viridis(discrete=TRUE, option = "magma")
# save it
ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/",
"PREMUP_computational/computational_model/figures/dprime_exp2.png"),
width = 7, height = 7)
# now calculate the hit rate by accuracy
#-----------------hitbyAcc------------------------------------------------#
names(exp1)
names(exp2)
# select only old
exp1<-exp1[exp1$OvsN==1,]
exp2<-exp2[exp2$OvsN==1,]
# create prediction strength
exp1$prediction_condition<-ifelse(exp1$contingency=="0,33", "Flat", "Strong")
exp2$prediction_condition<-ifelse(exp2$PE_level=="0,5", "Flat", ifelse(exp2$PE_level=="0,7"
| exp2$PE_level == "0,3", "Weak", "Strong" ))
# we only need encoding accuracy and
VoI1<-c("participant", "prediction_condition", "enc_acc", "id_acc")
exp1<-exp1[, ..VoI1]
names(exp1)[c(3,4)]<-c("prediction_accuracy", "recognition_accuracy")
VoI2<-c("participant", "prediction_condition", "trial_acc", "id_acc")
exp2<-exp2[, ..VoI2]
names(exp2)[c(3,4)]<-c("prediction_accuracy", "recognition_accuracy")
# bind them
exp2$participant<-exp2$participant+200
exp1$experiment<-"Experiment1"
exp2$experiment<-"Experiment2"
allData<-rbind(exp1, exp2)
#-----------------Experiment1------------------------------------------------#
# exclude participants with low performance in phase1
exclPhase1<-c(7 ,16, 19, 20, 23)
exp1<-exp1[!exp1$participant %in% exclPhase1, ]
### aggregate
# take the se within-participant
data_agg_exp1<-exp1 %>%
group_by(prediction_condition, participant) %>%
dplyr::summarise(rec_acc = mean(recognition_accuracy, na.rm = T),
experiment = first(experiment))
data_agg_exp1_acc<-exp1 %>%
group_by(  prediction_accuracy, participant) %>%
dplyr::summarise(rec_acc = mean(recognition_accuracy, na.rm = T),
experiment = first(experiment))
library(Rmisc)
dat_summary_exp1 <- summarySEwithin(data_agg_exp1,
measurevar = "rec_acc",
withinvars = c("prediction_condition"),
idvar = "participant")
dat_summary_exp1_acc <- summarySEwithin(data_agg_exp1_acc,
measurevar = "rec_acc",
withinvars = c( "prediction_accuracy"),
idvar = "participant")
gplot_exp1_pred<-ggplot(data_agg_exp1, aes( x=prediction_condition, y=rec_acc))+
geom_bar(aes(prediction_condition, rec_acc, fill = prediction_condition),
position="dodge",stat="summary", fun.y="mean", SE=F)+
geom_errorbar(aes(y = rec_acc, ymin = rec_acc - se, ymax = rec_acc + se),
color = "black", width = 0.10, data=dat_summary_exp1)+
#facet_wrap(experiment~.)+
theme_bw()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20)
)+
xlab("Prediction Condition")+
ggtitle("Experiment 1")+
scale_fill_viridis(discrete=TRUE, option = "magma")
gplot_exp1_pred
# save it
ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/",
"PREMUP_computational/computational_model/figures/prediction_cond_exp1.png"),
width = 7, height = 7)
# is that significant?
exp1$prediction_condition<-as.factor(exp1$prediction_condition)
modexp1_prediction<-glmer(recognition_accuracy~prediction_condition+(prediction_condition  | participant),
family = binomial, data = exp1)
summary(modexp1_prediction)
Anova(modexp1_prediction)
# accuracy now
data_agg_exp1_acc$prediction_accuracy<-as.factor(data_agg_exp1_acc$prediction_accuracy)
gplot_exp1_acc<-ggplot(data_agg_exp1_acc, aes( x=prediction_accuracy, y=rec_acc))+
geom_bar(aes(prediction_accuracy, rec_acc, fill = prediction_accuracy),
position="dodge",stat="summary", fun.y="mean", SE=F)+
geom_errorbar(aes(y = rec_acc, ymin = rec_acc - se, ymax = rec_acc + se),
color = "black", width = 0.10, data=dat_summary_exp1_acc)+
#facet_wrap(experiment~.)+
theme_bw()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20)
)+
xlab("Prediction Accuracy")+
ggtitle("Experiment 1")+
scale_fill_viridis(discrete=TRUE, option = "magma")
gplot_exp1_acc
# is that significant?
modexp1_acc<-glmer(recognition_accuracy~prediction_accuracy+(prediction_accuracy  | participant),
family = binomial, data = exp1)
summary(modexp1_acc)
Anova(modexp1_acc)
# accuracy by prediction
data_agg_exp1_acc_pred<-exp1 %>%
group_by(  prediction_accuracy,prediction_condition,  participant) %>%
dplyr::summarise(rec_acc = mean(recognition_accuracy, na.rm = T),
experiment = first(experiment))
dat_summary_exp1_acc_pred <- summarySEwithin(data_agg_exp1_acc_pred,
measurevar = "rec_acc",
withinvars = c( "prediction_accuracy", "prediction_condition"),
idvar = "participant")
# rename the levels of prediction accuracy
data_agg_exp1_acc_pred$prediction_accuracy<-as.factor(data_agg_exp1_acc_pred$prediction_accuracy)
levels(data_agg_exp1_acc_pred$prediction_accuracy)<-c("Incorrect", "Correct")
levels(dat_summary_exp1_acc_pred$prediction_accuracy)<-c("Incorrect", "Correct")
gplot_exp1_pred_acc<-ggplot(data_agg_exp1_acc_pred, aes( x=prediction_accuracy, y=rec_acc))+
geom_bar(aes(prediction_accuracy, rec_acc, fill = prediction_accuracy),
position="dodge",stat="summary", fun.y="mean", SE=F)+
geom_errorbar(aes(y = rec_acc, ymin = rec_acc - se, ymax = rec_acc + se),
color = "black", width = 0.10, data=dat_summary_exp1_acc_pred)+
facet_wrap(prediction_condition~.)+
theme_bw()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20),
strip.text.x = element_text(size = 20)
)+
xlab("Prediction Condition")+
ggtitle("Experiment 1")+
scale_fill_viridis(discrete=TRUE, option = "plasma")
gplot_exp1_pred_acc
# save it
ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/",
"PREMUP_computational/computational_model/figures/prediction_acc_exp1.png"),
width = 7, height = 7)
# is that significant?
modexp1_acc_pred<-glmer(recognition_accuracy~prediction_accuracy*prediction_condition
+(prediction_accuracy*prediction_condition  | participant),
family = binomial, data = exp1,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(modexp1_acc_pred)
Anova(modexp1_acc_pred)
exp2<-exp2[!exp2$participant %in% exclPhase1exp2, ]
### aggregate
# take the se within-participant
data_agg_exp2<-exp2 %>%
group_by(prediction_condition, participant) %>%
dplyr::summarise(rec_acc = mean(recognition_accuracy, na.rm = T),
experiment = first(experiment))
data_agg_exp2_acc<-exp2 %>%
group_by(  prediction_accuracy, participant) %>%
dplyr::summarise(rec_acc = mean(recognition_accuracy, na.rm = T),
experiment = first(experiment))
library(Rmisc)
dat_summary_exp2<- summarySEwithin(data_agg_exp2,
measurevar = "rec_acc",
withinvars = c("prediction_condition"),
idvar = "participant")
dat_summary_exp2_acc <- summarySEwithin(data_agg_exp2_acc,
measurevar = "rec_acc",
withinvars = c( "prediction_accuracy"),
idvar = "participant")
# accuracy by prediction
data_agg_exp2_acc_pred<-exp2 %>%
group_by(  prediction_accuracy,prediction_condition,  participant) %>%
dplyr::summarise(rec_acc = mean(recognition_accuracy, na.rm = T),
experiment = first(experiment))
dat_summary_exp2_acc_pred <- summarySEwithin(data_agg_exp2_acc_pred,
measurevar = "rec_acc",
withinvars = c( "prediction_accuracy", "prediction_condition"),
idvar = "participant")
# rename the levels of prediction accuracy
data_agg_exp1_acc_pred$prediction_accuracy<-as.factor(data_agg_exp1_acc_pred$prediction_accuracy)
levels(data_agg_exp1_acc_pred$prediction_accuracy)<-c("Incorrect", "Correct")
levels(dat_summary_exp1_acc_pred$prediction_accuracy)<-c("Incorrect", "Correct")
gplot_exp1_pred_acc<-ggplot(data_agg_exp1_acc_pred, aes( x=prediction_accuracy, y=rec_acc))+
geom_bar(aes(prediction_accuracy, rec_acc, fill = prediction_accuracy),
position="dodge",stat="summary", fun.y="mean", SE=F)+
geom_errorbar(aes(y = rec_acc, ymin = rec_acc - se, ymax = rec_acc + se),
color = "black", width = 0.10, data=dat_summary_exp1_acc_pred)+
facet_wrap(prediction_condition~.)+
theme_bw()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20),
strip.text.x = element_text(size = 20)
)+
xlab("Prediction Condition")+
ggtitle("Experiment 1")+
scale_fill_viridis(discrete=TRUE, option = "plasma")
# rename the levels of prediction accuracy
data_agg_exp2_acc_pred$prediction_accuracy<-as.factor(data_agg_exp2_acc_pred$prediction_accuracy)
levels(data_agg_exp2_acc_pred$prediction_accuracy)<-c("Incorrect", "Correct")
levels(dat_summary_exp2_acc_pred$prediction_accuracy)<-c("Incorrect", "Correct")
gplot_exp1_pred_acc<-ggplot(data_agg_exp1_acc_pred, aes( x=prediction_accuracy, y=rec_acc))+
geom_bar(aes(prediction_accuracy, rec_acc, fill = prediction_accuracy),
position="dodge",stat="summary", fun.y="mean", SE=F)+
geom_errorbar(aes(y = rec_acc, ymin = rec_acc - se, ymax = rec_acc + se),
color = "black", width = 0.10, data=dat_summary_exp1_acc_pred)+
facet_wrap(prediction_condition~.)+
theme_bw()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20),
strip.text.x = element_text(size = 20)
)+
xlab("Prediction Condition")+
ggtitle("Experiment 1")+
scale_fill_viridis(discrete=TRUE, option = "plasma")
gplot_exp2_pred_acc<-ggplot(data_agg_exp2_acc_pred, aes( x=prediction_accuracy, y=rec_acc))+
geom_bar(aes(prediction_accuracy, rec_acc, fill = prediction_accuracy),
position="dodge",stat="summary", fun.y="mean", SE=F)+
geom_errorbar(aes(y = rec_acc, ymin = rec_acc - se, ymax = rec_acc + se),
color = "black", width = 0.10, data=dat_summary_exp1_acc_pred)+
facet_wrap(prediction_condition~.)+
theme_bw()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20),
strip.text.x = element_text(size = 20)
)+
xlab("Prediction Condition")+
ggtitle("Experiment 1")+
scale_fill_viridis(discrete=TRUE, option = "plasma")
gplot_exp2_pred_acc
gplot_exp2_pred_acc<-ggplot(data_agg_exp2_acc_pred, aes( x=prediction_accuracy, y=rec_acc))+
geom_bar(aes(prediction_accuracy, rec_acc, fill = prediction_accuracy),
position="dodge",stat="summary", fun.y="mean", SE=F)+
geom_errorbar(aes(y = rec_acc, ymin = rec_acc - se, ymax = rec_acc + se),
color = "black", width = 0.10, data=dat_summary_exp2_acc_pred)+
facet_wrap(prediction_condition~.)+
theme_bw()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20),
strip.text.x = element_text(size = 20)
)+
xlab("Prediction Condition")+
ggtitle("Experiment 1")+
scale_fill_viridis(discrete=TRUE, option = "plasma")
gplot_exp2_pred_acc
gplot_exp2_pred_acc<-ggplot(data_agg_exp2_acc_pred, aes( x=prediction_accuracy, y=rec_acc))+
geom_bar(aes(prediction_accuracy, rec_acc, fill = prediction_accuracy),
position="dodge",stat="summary", fun.y="mean", SE=F)+
geom_errorbar(aes(y = rec_acc, ymin = rec_acc - se, ymax = rec_acc + se),
color = "black", width = 0.10, data=dat_summary_exp2_acc_pred)+
facet_wrap(prediction_condition~.)+
theme_bw()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20),
strip.text.x = element_text(size = 20)
)+
xlab("Prediction Condition")+
ggtitle("Experiment 2")+
scale_fill_viridis(discrete=TRUE, option = "plasma")
gplot_exp2_pred_acc
# save it
ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/",
"PREMUP_computational/computational_model/figures/prediction_acc_exp2.png"),
width = 7, height = 7)
# is that significant?
modexp2_acc_pred<-glmer(recognition_accuracy~prediction_accuracy*prediction_condition
+(prediction_accuracy*prediction_condition  | participant),
family = binomial, data = exp2,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(modexp1_acc_pred)
Anova(modexp1_acc_pred)
summary(modexp2_acc_pred)
Anova(modexp2_acc_pred)
summary(modexp2_acc_pred)
gplot_exp2_pred_acc<-ggplot(data_agg_exp2_acc_pred, aes( x=prediction_accuracy, y=rec_acc))+
geom_bar(aes(prediction_accuracy, rec_acc, fill = prediction_accuracy),
position="dodge",stat="summary", fun.y="mean", SE=F)+
geom_errorbar(aes(y = rec_acc, ymin = rec_acc - se, ymax = rec_acc + se),
color = "black", width = 0.10, data=dat_summary_exp2_acc_pred)+
facet_wrap(prediction_condition~.)+
theme_bw()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20),
strip.text.x = element_text(size = 20)
)+
ylim(0,1)+
xlab("Prediction Condition")+
ggtitle("Experiment 2")+
scale_fill_viridis(discrete=TRUE, option = "plasma")
gplot_exp2_pred_acc
# save it
ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/",
"PREMUP_computational/computational_model/figures/prediction_acc_exp2.png"),
width = 8, height = 7)
gplot_exp1_pred_acc<-ggplot(data_agg_exp1_acc_pred, aes( x=prediction_accuracy, y=rec_acc))+
geom_bar(aes(prediction_accuracy, rec_acc, fill = prediction_accuracy),
position="dodge",stat="summary", fun.y="mean", SE=F)+
geom_errorbar(aes(y = rec_acc, ymin = rec_acc - se, ymax = rec_acc + se),
color = "black", width = 0.10, data=dat_summary_exp1_acc_pred)+
facet_wrap(prediction_condition~.)+
theme_bw()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20),
strip.text.x = element_text(size = 20)
)+
ylim(0,1)+
xlab("Prediction Condition")+
ggtitle("Experiment 1")+
scale_fill_viridis(discrete=TRUE, option = "plasma")
gplot_exp1_pred_acc
# save it
ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/",
"PREMUP_computational/computational_model/figures/prediction_acc_exp2.png"),
width = 9, height = 7)
gplot_exp2_pred_acc
# save it
ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/",
"PREMUP_computational/computational_model/figures/prediction_acc_exp2.png"),
width = 9, height = 7)
gplot_exp1_pred_acc<-ggplot(data_agg_exp1_acc_pred, aes( x=prediction_accuracy, y=rec_acc))+
geom_bar(aes(prediction_accuracy, rec_acc, fill = prediction_accuracy),
position="dodge",stat="summary", fun.y="mean", SE=F)+
geom_errorbar(aes(y = rec_acc, ymin = rec_acc - se, ymax = rec_acc + se),
color = "black", width = 0.10, data=dat_summary_exp1_acc_pred)+
facet_wrap(prediction_condition~.)+
theme_bw()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20),
strip.text.x = element_text(size = 20)
)+
ylim(0,1)+
xlab("Prediction Condition")+
ggtitle("Experiment 1")+
scale_fill_viridis(discrete=TRUE, option = "plasma")
gplot_exp1_pred_acc
# save it
ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/",
"PREMUP_computational/computational_model/figures/prediction_acc_exp1.png"),
width = 9, height = 7)
Anova(modexp1_acc_pred)
data_agg_exp1_acc_pred$prediction_accuracy
# is that significant?
modexp1_acc_pred<-glmer(recognition_accuracy~prediction_accuracy*prediction_condition
+(prediction_accuracy*prediction_condition  | participant),
family = binomial, data = exp1,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
# is that significant?
exp1$prediction_accuracy<-as.factor(exp1$prediction_accuracy)
modexp1_acc_pred<-glmer(recognition_accuracy~prediction_accuracy*prediction_condition
+(prediction_accuracy*prediction_condition  | participant),
family = binomial, data = exp1,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(modexp1_acc_pred)
Anova(modexp1_acc_pred)
exp1$prediction_condition-relevel(exp1$prediction_condition, ref = "Strong")
exp1$prediction_condition<-relevel(exp1$prediction_condition, ref = "Strong")
modexp1_acc_pred<-glmer(recognition_accuracy~prediction_accuracy*prediction_condition
+(prediction_accuracy*prediction_condition  | participant),
family = binomial, data = exp1,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(modexp1_acc_pred)
exp(0.70)
Anova(modexp1_acc_pred)
Anova(modexp2_acc_pred)
summary(modexp2_acc_pred)
# is that significant?
exp2$prediction_accuracy<-as.factor(exp2$prediction_accuracy)
modexp2_acc_pred<-glmer(recognition_accuracy~prediction_accuracy*prediction_condition
+(prediction_accuracy*prediction_condition  | participant),
family = binomial, data = exp2,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
Anova(modexp2_acc_pred)
exp2$prediction_accuracy
exp2$prediction_accuracy
# is that significant?
exp2$prediction_accuracy<-as.factor(exp2$prediction_accuracy)
modexp2_acc_pred<-glmer(recognition_accuracy~prediction_accuracy*prediction_condition
+(prediction_accuracy*prediction_condition  | participant),
family = binomial, data = exp2,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(modexp2_acc_pred)
exp(0.47)
# relevel and do the strong reference
exp2$prediction_condition<-relevel(exp2$prediction_condition, ref = "Strong")
# relevel and do the strong reference
exp2$prediction_condition<-as.factor(exp2$prediction_condition)
exp2$prediction_condition<-relevel(exp2$prediction_condition, ref = "Strong")
modexp2_acc_pred<-glmer(recognition_accuracy~prediction_accuracy*prediction_condition
+(prediction_accuracy*prediction_condition  | participant),
family = binomial, data = exp2,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(modexp2_acc_pred)
strVflat = c(-1,1,0)
strVweak=c(-1,0,1)
flatVweak = c(1, 0,1)
contrasts(exp2$prediction_condition)<-cbind(strVflat,strVweak,flatVweak)
modexp2_acc_pred<-glmer(recognition_accuracy~prediction_accuracy*prediction_condition
+(prediction_accuracy*prediction_condition  | participant),
family = binomial, data = exp2,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(modexp2_acc_pred)
0.10*
2
0.010*
*2
0.010*2
# break down the interaction
modexp2_acc_pred_Flat<-glmer(recognition_accuracy~prediction_accuracy
+(prediction_accuracy*prediction_condition  | participant),
family = binomial, data = exp2[exp2$prediction_condition=="Flat"],
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
# break down the interaction
modexp2_acc_pred_Flat<-glmer(recognition_accuracy~prediction_accuracy
+(prediction_accuracy  | participant),
family = binomial, data = exp2[exp2$prediction_condition=="Flat"],
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(modexp2_acc_pred_Flat)
# break down the interaction
odexp2_acc_pred_Weak<-glmer(recognition_accuracy~prediction_accuracy
+(prediction_accuracy  | participant),
family = binomial, data = exp2[exp2$prediction_condition=="Weak"],
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(odexp2_acc_pred_Weak)
exp(0.30)
modexp2_acc_pred_Flat<-glmer(recognition_accuracy~prediction_accuracy
+(prediction_accuracy  | participant),
family = binomial, data = exp2[exp2$prediction_condition=="Flat"],
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(modexp2_acc_pred_Flat)
modexp2_acc_pred_Strong<-glmer(recognition_accuracy~prediction_accuracy
+(prediction_accuracy  | participant),
family = binomial, data = exp2[exp2$prediction_condition=="Strong"],
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(modexp2_acc_pred_Strong)
# break down the interaction
modexp1_acc_pred_flat<-glmer(recognition_accuracy~prediction_accuracy*prediction_condition
+(prediction_accuracy  | participant),
family = binomial, data = exp1[exp1$prediction_accuracy=="Flat",],
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
# break down the interaction
modexp1_acc_pred_flat<-glmer(recognition_accuracy~prediction_accuracy
+(prediction_accuracy  | participant),
family = binomial, data = exp1[exp1$prediction_accuracy=="Flat",],
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
# break down the interaction
modexp1_acc_pred_flat<-glmer(recognition_accuracy~prediction_accuracy
+(prediction_accuracy  | participant),
family = binomial, data = exp1[exp1$prediction_condition=="Flat",],
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(modexp1_acc_pred_flat)
exp(0.66)
modexp1_acc_pred_strong<-glmer(recognition_accuracy~prediction_accuracy
+(prediction_accuracy  | participant),
family = binomial, data = exp1[exp1$prediction_condition=="Strong",],
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(modexp1_acc_pred_strong)
exp(-0.03)
