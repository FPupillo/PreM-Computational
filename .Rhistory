experiment = first(experiment))
data_summary_exp1_pred_acc <- summarySEwithin(data_agg_exp1_pred_acc,
measurevar = "rec_acc",
withinvars = c( "prediction_accuracy",
"prediction_condition"),
idvar = "participant")
gplot_exp1_pred_acc<-ggplot(data_agg_exp1_pred_acc, aes( x=prediction_condition, y=rec_acc))+
geom_bar(aes(prediction_condition, rec_acc, fill = prediction_condition),
position="dodge",stat="summary", fun.y="mean", SE=F)+
geom_jitter(width = 0.20, alpha = 0.3 )+
geom_errorbar(aes(y = rec_acc, ymin = rec_acc - se, ymax = rec_acc + se),
color = "black", width = 0.10, data=data_summary_exp1_pred_acc)+
#facet_wrap(experiment~.)+
theme_classic()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 30),
axis.title.x = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.text=element_text(size=28)
)+
theme(strip.text.x = element_text(size = 28))+
xlab("Contingency")+
ggtitle("Experiment 1")+
facet_wrap(.~prediction_accuracy)+
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_manual(values =   c("#DDCC77", "#CC6677","#117733"))
gplot_exp1_pred_acc
# save it
ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/",
"PREMUP_computational/computational_model/figures/contingency_acc_exp1.png"),
width = 10, height = 10)
knitr::opts_chunk$set(echo = TRUE)
# model based stats
rm(list=ls())
library(ggplot2)
library(lme4)
library(dplyr)
library(reshape2)
library(lmerTest)
library(car)
library(data.table)
# set current directory to the parent folder
setwd(dirname(getwd()))
cd<-getwd()
source("helper_functions/getPE.R")
setwd("output_files")
getwd()
# get the table
BIC1<-read.csv("output_files/TableBIC.bypart.exp1.csv")
knitr::opts_chunk$set(echo = TRUE)
# model based stats
rm(list=ls())
library(ggplot2)
library(lme4)
library(dplyr)
library(reshape2)
library(lmerTest)
library(car)
library(data.table)
# set current directory to the parent folder
setwd(dirname(getwd()))
cd<-getwd()
source("helper_functions/getPE.R")
setwd("output_files")
getwd()
# get the table
BIC1<-read.csv("output_files/TableBIC.bypart.exp1.csv")
exp1_dLR_Instr<-read.csv(paste(abs, "fittedData.exp1.Phase2.dLR_Instr.csv", sep=""))
abs
# start with experiment 1
# dLR_Instr
abs<-"/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/PREMUP_computational/computational_model/output_files/"
exp1_dLR_Instr<-read.csv(paste(abs, "fittedData.exp1.Phase2.dLR_Instr.csv", sep=""))
knitr::opts_chunk$set(echo = TRUE)
# model based stats
rm(list=ls())
library(ggplot2)
library(lme4)
library(dplyr)
library(reshape2)
library(lmerTest)
library(car)
library(data.table)
# set current directory to the parent folder
setwd(dirname(getwd()))
cd<-getwd()
source("helper_functions/getPE.R")
setwd("output_files")
getwd()
# get the files
#abs<-abs<-"/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/PREMUP/computational_model/output_files/"
abs<-"/Users/francescopupillo/PowerFolders/Frankfurt_University/PIVOTAL/PREMUP_computational/computational_model/output_files/"
exp1<-read.csv(paste(abs, "fittedData.exp1.Phase2.fLR_Instr.csv", sep=""))
knitr::opts_chunk$set(echo = TRUE)
# model based stats
rm(list=ls())
library(ggplot2)
library(lme4)
library(dplyr)
library(reshape2)
library(lmerTest)
library(car)
library(data.table)
# set current directory to the parent folder
setwd(dirname(getwd()))
cd<-getwd()
source("helper_functions/getPE.R")
setwd("output_files")
getwd()
# get the files
abs<-abs<-"/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/PREMUP/computational_model/output_files/"
exp1<-read.csv(paste(abs, "fittedData.exp1.Phase2.fLR_Instr.csv", sep=""))
# exclude fillers
exp1<-exp1[exp1$pred_Cond!=4,]
exp1<-read.csv(paste(abs, "fittedData.exp1.Phase2.fLR_Instr.csv", sep=""))
# get the files
abs<-abs<-"/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/PREMUP/computational_model/output_files/"
#abs<-"/Users/francescopupillo/PowerFolders/Frankfurt_University/PIVOTAL/PREMUP_computational/computational_model/output_files/"
exp1<-read.csv(paste(abs, "fittedData.exp1.Phase2.fLR_Instr.csv", sep=""))
# get the files
abs<-abs<-"/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/PREMUP_computational/computational_model/output_files/"
exp1<-read.csv(paste(abs, "fittedData.exp1.Phase2.fLR_Instr.csv", sep=""))
# exclude fillers
exp1<-exp1[exp1$pred_Cond!=4,]
# select only immediate
exp1<-exp1[exp1$rec_session=="ImmediateRec",]
# exclude participants with low performance in phase1
exclPhase1<-c(7 ,16, 19, 20, 23)
exp1<-exp1[!exp1$SubNum %in% exclPhase1, ]
exp2<-read.csv(paste(abs, "fittedData.exp2.Phase2.fLR_Instr.csv", sep=""))
# select only immediate
exp2<-exp2[exp2$participant<41,]
# select only where practice == 0
exp2<-exp2[exp2$practice==0,]
# delete the fillers
exp2<-exp2[exp2$fillers==0,]
# exclude participants with low performance in phase1
exclPhase1exp2<-c(3 ,13, 28, 36, 39)
exp2<-exp2[!exp2$SubNum %in% exclPhase1exp2, ]
# select datasets
exp1<-getPE(exp1,3)
exp2<-getPE(exp2, 2)
# select the variables of interest
VoI<-c("pe_level", "trialN", "rec_acc", "acc", "rec_session", "SubNum", "PE",
"rec_Obj", "scene_cat")
exp1<-exp1[, VoI]
names(exp1)[c(1,3,4,5, 8, 9)]<-c("PE_level",  "id_acc","trial_acc", "session", "obj_file", "scn_cat")
#exp2<-exp2[,VoI]
# convert PE level as factor
exp1$PE_level<-as.factor(exp1$PE_level)
# rename PE levels
levels(exp1$PE_level) <- c("0.9", "0.1", "0.5")
# order the PE
exp1$PE_level<-factor(exp1$PE_level, level = c("0.1", "0.5",  "0.9"))
# create scene condition
exp1$scn_condition<-ifelse(exp1$PE_level=="0.5", "Flat", "Strong")
# check distribution
# PE feedb -pilot
PEDistrExp1<-ggplot(exp1, aes(x= PE,colour=scn_condition))
plot1<-
PEDistrExp1+geom_density(aes(y=..density..),alpha=0.3)+
#geom_histogram(aes(y=..density..))+
geom_density()+
#facet_grid( ~ scn_condition)+
#ggtitle("PE distribution, Experiment 1")+
annotate(geom="text",  label="a",size=8,family="serif")+
guides(fill=guide_legend(title="Scene Condition"))+
scale_fill_viridis_d()+
theme_bw()
#theme(legend.position = "none")
print(plot1)
# now three
# rename scene condition
exp2$scn_condition<-as.factor(exp2$scn_condition)
levels(exp2$scn_condition)<-c("Flat", "Weak", "Strong")
PEDistrExp2<-ggplot(exp2, aes(x= PE, fill=scn_condition))
plot2<-
PEDistrExp2+geom_density()+
#facet_grid( ~ scn_condition)+
#ggtitle("PE distribution, Experiment 1")
theme_bw()+
annotate(geom="text",  label="b",size=8,family="serif")+
guides(fill=guide_legend(title="Scene Condition"))+
#ylab("")+
scale_fill_viridis_d()
print(plot2 )
ggpubr::ggarrange( plot1, plot2, ncol=2, labels = c("a)", "b)"))
# ggsave(paste0("/Users/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures//PEdistr_fLR_instr.All.png"))
# now three
# PE obse -three
# by participant
ggplot(exp1, aes(x=PE))+ geom_histogram()+theme_bw()+
facet_wrap(.~SubNum)
# ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/PEdistr_fLR_instr_byID.exp1.png"))
## Saving 7 x 5 in image
## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
ggplot(exp2, aes(x=PE))+ geom_histogram()+theme_bw()+
facet_wrap(.~SubNum)
# ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/PEdistr_fLR_instr_byID.exp2.png"))
PEdistrAccExp1<-ggplot(exp1, aes(x= PE, fill=PE_level))
print(
PEdistrAccExp1+geom_histogram()+ facet_grid( trial_acc~ scn_condition)+ggtitle("PE observational distribution, Three")
)
PEdistrAccExp2<-ggplot(exp2, aes(x= PE, fill=scn_condition))
print(
PEdistrAccExp2+geom_histogram()+ facet_grid( trial_acc~ scn_condition)+ggtitle("PE observational distribution, Three")
)
# first, analyse accuracy by
## PE by accuracy - pilot
# plot
exp1$trial_acc<-as.factor(exp1$trial_acc)
levels(exp1$trial_acc)<-c("Incorrect", "Correct")
print(
ggplot(exp1, aes( x=PE, y=id_acc))+
geom_line(stat="smooth",method = "glm",  formula=y~x,method.args=list(family="binomial"), alpha=0.5)+
aes(colour = factor(SubNum), alpha=0.3)+
geom_smooth(method="glm",formula=y~x,method.args=list(family="binomial"), colour="black", se=T)+
theme(strip.text.x = element_text(size = 13))+ ylim(c(0,1))+
facet_grid(.~trial_acc)+
theme_bw()+
ggtitle("Experiment 1")+
#annotate(geom="text",  label="a",size=8,family="serif")+
theme(legend.position = "none")+
ylab("p(Hit)")
)
# ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/PE_mem_fLR_instr.exp1.png")
#        ,width = 7, height = 7)
#ggsave("PEobsByAccFeedbAll.png")
## PE by accuracy - exp2
exp2$trial_acc<-as.factor(exp2$trial_acc)
levels(exp2$trial_acc)<-c("Incorrect", "Correct")
print(
ggplot(exp2, aes( x=PE, y=id_acc))+
geom_line(stat="smooth",method = "glm", formula=y~x,method.args=list(family="binomial"), alpha=0.5)+
aes(colour = factor(SubNum), alpha=0.3)+
geom_smooth(method="glm",formula=y~x,method.args=list(family="binomial"), colour="black", se=T)+
theme(strip.text.x = element_text(size = 13))+ ylim(c(0,1))+
facet_grid(.~trial_acc)+
theme_bw()+
ggtitle("Experiment 2")+
theme(legend.position = "none")+
ylab("p(Hit)")
)
# ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/PE_mem_fLR_instr.exp2.png"),
#        width = 7, height = 7)
# analyse
PEbyAccExp1<-glmer(id_acc~PE*trial_acc+(trial_acc*PE|SubNum), family= binomial,
data = exp1,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(PEbyAccExp1)
Anova(PEbyAccExp1)
# in the positive side
PEbyAccExp1Pos<-glmer(id_acc~PE+(PE|SubNum), family= binomial,
data = exp1[exp1$trial_acc=="Correct",],
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(PEbyAccExp1Pos)
# in the negative side
PEbyAccExp1Neg<-glmer(id_acc~PE+(PE|SubNum), family= binomial,
data = exp1[exp1$trial_acc=="Incorrect",],
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(PEbyAccExp1Neg)
# analyse
PEbyAccExp2<-glmer(id_acc~PE*trial_acc+(trial_acc*PE|SubNum), family= binomial,
data = exp2,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(PEbyAccExp2)
Anova(PEbyAccExp2)
# in the positive side
PEbyAccExp2Pos<-glmer(id_acc~PE+(PE|SubNum), family= binomial,
data = exp2[exp2$trial_acc=="Correct",],
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(PEbyAccExp2Pos)
# in the negative side
PEbyAccExp2Neg<-glmer(id_acc~PE+(PE|SubNum), family= binomial,
data = exp2[exp2$trial_acc=="Incorrect",],
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(PEbyAccExp2Neg)
exp1$exp<-"Experiment1"
exp2$exp<-"Experiment2"
exp2$session<-as.character(exp2$session)
exp1$session<-as.character(exp1$session)
exp1$PE_level<-as.character(exp1$PE_level)
exp2$PE_level<-as.character(exp2$PE_level)
exp1$scn_condition<-as.character(exp1$scn_condition)
exp2$scn_condition<-as.character(exp2$scn_condition)
# threeFeedb.exc$session<-as.factor(threeFeedb.exc$session)
# levels(threeFeedb.exc$session) <- c("ImmediateRec", "DelayedRec")
#exp2$SubNum<-exp2$SubNum+max(unique(exp1$SubNum))
# retrieve the learning rate
# experiment 1
# learning rate
exp1lr<-fread(paste0("/Users/francescopupillo/PowerFolders/Frankfurt_University/PIVOTAL/PREMUP_computational/exp1/outputs/group_level/computational_model/",
"ParameterEstimation.exp1.betalimit=10.initialQ=0.33.fLR_Instr.csv"))
# select the first three rows
exp1lr<-exp1lr[,1:3]
# change the name of the variable indicating the participant
names(exp1lr)[1]<-"SubNum"
binnedData<-vector()
for (s in unique(allData$SubNum)){
tryCatch({
# subset participant
currdf<-allData[allData$SubNum==s,]
#for (PElev in unique(currdf$PE_level)){
#currdfPE<-currdf[currdf$PE_level==PElev,]
for (trial_acc in c("Correct","Incorrect")){
currfacc<-currdf[currdf$trial_acc==trial_acc,]
# sort them
#currdfPEacc<-currdfPEacc[order(currdfPEacc$PEobs),]
# get quantiles
quantiles<-quantile(currfacc$PE)
# assign quantiles
currfacc$quantile<-NA
for (n in 1:nrow(currfacc)){
if (currfacc$PE[n]>=quantiles[1] & currfacc$PE[n]<quantiles[2]){
currfacc$quantile[n]<-1
} else if(currfacc$PE[n]>=quantiles[2] & currfacc$PE[n]<quantiles[3]){
currfacc$quantile[n]<-2
} else if (currfacc$PE[n]>=quantiles[3] & currfacc$PE[n]<quantiles[4]){
currfacc$quantile[n]<-3
} else if (currfacc$PE[n]>=quantiles[4] ){
currfacc$quantile[n]<-4
}
}
# create mean of id_acc and P by quantile
df<-currfacc %>%
group_by(quantile) %>%
dplyr::summarise(PE = mean(PE), id_acc = mean(id_acc),
#PE_level = unique(PE_level),
SubNum = unique(SubNum),
trial_acc = unique(trial_acc),
exp = unique(exp))
binnedData<-rbind(binnedData, as.data.frame(df))
}
},  error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
}
# merge thetwo
allData<-data.frame(rbind(exp1,exp2 ))
# experiment 1
# learning rate
exp1lr<-fread(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/PREMUP_computational/exp1/outputs/group_level/computational_model/",
"ParameterEstimation.exp1.betalimit=10.initialQ=0.33.fLR_Instr.csv"))
# select the first three rows
exp1lr<-exp1lr[,1:3]
# change the name of the variable indicating the participant
names(exp1lr)[1]<-"SubNum"
exp1<-merge(exp1, exp1lr, by = "SubNum")
# exp 2
exp2lr<-fread(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/PREMUP_computational/exp2/outputs/group_level/computational_model/",
"ParameterEstimation.exp2.betalimit=10.initialQ=0.5.fLR_Instr.csv"))
# select the first three rows
exp2lr<-exp2lr[,1:3]
# change the name of the variable indicating the participant
names(exp2lr)[1]<-"SubNum"
exp2<-merge(exp2, exp2lr, by = "SubNum")
# add "2" in front of the subnum
exp2$SubNum<-exp2$SubNum+200
exp2<-exp2[, names(exp1)]
# merge thetwo
allData<-data.frame(rbind(exp1,exp2 ))
# how many trials per participant
allData %>%
group_by(SubNum) %>%
tally()
binnedData<-vector()
for (s in unique(allData$SubNum)){
tryCatch({
# subset participant
currdf<-allData[allData$SubNum==s,]
#for (PElev in unique(currdf$PE_level)){
#currdfPE<-currdf[currdf$PE_level==PElev,]
for (trial_acc in c("Correct","Incorrect")){
currfacc<-currdf[currdf$trial_acc==trial_acc,]
# sort them
#currdfPEacc<-currdfPEacc[order(currdfPEacc$PEobs),]
# get quantiles
quantiles<-quantile(currfacc$PE)
# assign quantiles
currfacc$quantile<-NA
for (n in 1:nrow(currfacc)){
if (currfacc$PE[n]>=quantiles[1] & currfacc$PE[n]<quantiles[2]){
currfacc$quantile[n]<-1
} else if(currfacc$PE[n]>=quantiles[2] & currfacc$PE[n]<quantiles[3]){
currfacc$quantile[n]<-2
} else if (currfacc$PE[n]>=quantiles[3] & currfacc$PE[n]<quantiles[4]){
currfacc$quantile[n]<-3
} else if (currfacc$PE[n]>=quantiles[4] ){
currfacc$quantile[n]<-4
}
}
# create mean of id_acc and P by quantile
df<-currfacc %>%
group_by(quantile) %>%
dplyr::summarise(PE = mean(PE), id_acc = mean(id_acc),
#PE_level = unique(PE_level),
SubNum = unique(SubNum),
trial_acc = unique(trial_acc),
exp = unique(exp))
binnedData<-rbind(binnedData, as.data.frame(df))
}
},  error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
}
# visualize
binnedData$quantile<-as.factor(binnedData$quantile)
binnedData$bin<-(binnedData$quantile)
# plot
PlotBind<-ggplot(binnedData, aes(x= PE, fill=bin))
print(
PlotBind+geom_density()+ facet_grid( trial_acc~ exp)+theme_classic()
)+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=13)
)+
scale_fill_viridis_d()+
theme(panel.spacing = unit(1, "lines"))
# take the se within-participant
data_agg<-binnedData %>%
group_by(bin,  trial_acc, SubNum) %>%
dplyr::summarise(id_acc = mean(id_acc, na.rm = T))
library(Rmisc)
dat_summary <- summarySEwithin(data_agg,
measurevar = "id_acc",
withinvars = c("bin", "trial_acc"),
idvar = "SubNum")
data_agg$bin<-as.factor(data_agg$bin)
gplotquant<-ggplot(data_agg, aes( x=bin, y=id_acc))+
geom_bar(aes(bin, id_acc, fill = bin),
position="dodge",stat="summary", fun.y="mean", SE=F)+
geom_errorbar(aes(y = id_acc, ymin = id_acc - se, ymax = id_acc + se),
color = "black", width = 0.10, data=dat_summary)+
geom_jitter(width = 0.20, alpha = 0.3 )+
facet_wrap(trial_acc~.)+
theme_classic()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=13)
)+
scale_fill_viridis_d(option = "cividis")
print(gplotquant)
gplotquant<-ggplot(data_agg, aes( x=bin, y=id_acc))+
geom_bar(aes(bin, id_acc, fill = bin),
position="dodge",stat="summary", fun.y="mean", SE=F)+
geom_errorbar(aes(y = id_acc, ymin = id_acc - se, ymax = id_acc + se),
color = "black", width = 0.10, data=dat_summary)+
geom_jitter(width = 0.20, alpha = 0.2)+
facet_wrap(trial_acc~.)+
theme_classic()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=13)
)+
scale_fill_viridis_d(option = "cividis")
print(gplotquant)
gplotquant<-ggplot(data_agg, aes( x=bin, y=id_acc))+
geom_bar(aes(bin, id_acc, fill = bin),
position="dodge",stat="summary", fun.y="mean", SE=F)+
geom_errorbar(aes(y = id_acc, ymin = id_acc - se, ymax = id_acc + se),
color = "black", width = 0.10, data=dat_summary)+
geom_jitter(width = 0.20, alpha = 0.2)+
facet_wrap(trial_acc~.)+
theme_classic()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 30),
axis.title.x = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.text=element_text(size=28)
)+
scale_fill_viridis_d(option = "cividis")
print(gplotquant)
ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/binnedPE_mem.png"),
width = 10, height = 10)
PEquant<-lmer(id_acc~bin*trial_acc*exp+(bin+trial_acc|SubNum),
data = binnedData)
PEquant<-lmer(id_acc~bin*trial_acc*exp+(bin+trial_acc|SubNum),
data = binnedData)
summary(PEquant)
Anova(PEquant, type="III")
gplotquant<-ggplot(data_agg, aes( x=bin, y=id_acc))+
geom_bar(aes(bin, id_acc, fill = bin),
position="dodge",stat="summary", fun.y="mean", SE=F)+
geom_errorbar(aes(y = id_acc, ymin = id_acc - se, ymax = id_acc + se),
color = "black", width = 0.10, data=dat_summary)+
geom_jitter(width = 0.20, alpha = 0.2)+
facet_wrap(trial_acc~.)+
theme_classic()+
ylab("% Hit")+
theme(legend.position = "none")+
theme(
plot.title = element_text(size = 30),
axis.title.x = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.text=element_text(size=28)
)+
theme(strip.text.x = element_text(size = 28))+
scale_fill_viridis_d(option = "cividis")
print(gplotquant)
ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/binnedPE_mem.png"),
width = 10, height = 10)
