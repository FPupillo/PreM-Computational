exp1<-read.csv(paste(abs, "fittedData.exp1.Phase2.fLR_Instr.csv", sep=""))
# exclude fillers
exp1<-exp1[exp1$pred_Cond!=4,]
# select only immediate
exp1<-exp1[exp1$rec_session=="ImmediateRec",]
# exclude participants with low performance in phase1
exclPhase1<-c(7 ,16, 19, 20, 23)
exp1<-exp1[!exp1$SubNum %in% exclPhase1, ]
exp2<-read.csv(paste(abs, "fittedData.exp2.Phase2.fLR_Instr.csv", sep=""))
# select only immediate
exp2<-exp2[exp2$participant<41,]
# select only where practice == 0
exp2<-exp2[exp2$practice==0,]
# delete the fillers
exp2<-exp2[exp2$fillers==0,]
# exclude participants with low performance in phase1
exclPhase1exp2<-c(3 ,13, 28, 36, 39)
exp2<-exp2[!exp2$SubNum %in% exclPhase1exp2, ]
getOutPE<-function(fittedData, NobjCategories){
#---------------------------------------------------------------------#
# this function takes the fitted data
# and the number of object categories by experiment
# and return the PE based on the choice participants made (signedPE)
#---------------------------------------------------------------------#
if (NobjCategories==2){
fittedData$PEchoice<-NA
if (!is.null(fittedData$Delta1)){
for (o in 1: nrow(fittedData)){
if (fittedData$response[o]==1){
fittedData$PEchoice[o]<-fittedData$Delta1[o]
}else if(fittedData$response[o]==2){
fittedData$PEchoice[o]<-fittedData$Delta2[o]
} else {fittedData$PEchoice[o]<-NA}
}
} else {fittedData$PEchoice[o] <-fittedData$Delta}
} else{ # 3 object categories
fittedData$PEchoice<-NA
if (!is.null(fittedData$Delta1)){
for (o in 1: nrow(fittedData)){
if (fittedData$response[o]==1){
fittedData$PEchoice[o]<-fittedData$Delta1[o]
}else if(fittedData$response[o]==2){
fittedData$PEchoice[o]<-fittedData$Delta2[o]
}else if(fittedData$response[o]==3){
fittedData$PEchoice[o]<-fittedData$Delta3[o]
} else {fittedData$PEchoice[o]<-NA}
}
} else {fittedData$PEchoice[o] <-fittedData$Delta}
}
return(fittedData)
}
# get the outcome PE for both experiment
exp1<-getOutPE(exp1,3)
exp2<-getOutPE(exp2, 2)
# select the variables of interest
VoI<-c("pe_level", "trialN", "rec_acc", "acc", "rec_session", "SubNum", "PEchoice")
exp1<-exp1[, VoI]
names(exp1)[c(1,3,4,5)]<-c("PE_level",  "id_acc","trial_acc", "session")
#exp2<-exp2[,VoI]
# convert PE level as factor
exp1$PE_level<-as.factor(exp1$PE_level)
# rename PE levels
levels(exp1$PE_level) <- c("0.9", "0.1", "0.5")
# order the PE
exp1$PE_level<-factor(exp1$PE_level, level = c("0.1", "0.5",  "0.9"))
# create scene condition
exp1$scn_condition<-ifelse(exp1$PE_level=="0.5", "Flat", "Strong")
# check distribution
# PE feedb -pilot
PEDistrExp1<-ggplot(exp1, aes(x= PEchoice,colour=scn_condition))
plot1<-
PEDistrExp1+geom_density(aes(y=..density..),alpha=0.3)+
#geom_histogram(aes(y=..density..))+
geom_density()+
#facet_grid( ~ scn_condition)+
#ggtitle("PE distribution, Experiment 1")+
annotate(geom="text",  label="a",size=8,family="serif")+
guides(fill=guide_legend(title="Scene Condition"))+
scale_fill_viridis_d()+
theme_bw()
#theme(legend.position = "none")
print(plot1)
# now three
# rename scene condition
exp2$scn_condition<-as.factor(exp2$scn_condition)
levels(exp2$scn_condition)<-c("Flat", "Weak", "Strong")
PEDistrExp2<-ggplot(exp2, aes(x= PEchoice, fill=scn_condition))
plot2<-
PEDistrExp2+geom_density()+
#facet_grid( ~ scn_condition)+
#ggtitle("PE distribution, Experiment 1")
theme_classic()+
annotate(geom="text",  label="b",size=8,family="serif")+
guides(fill=guide_legend(title="Scene Condition"))+
#ylab("")+
scale_fill_viridis_d()
print(plot2 )
ggpubr::ggarrange( plot1, plot2, ncol=2, labels = c("a)", "b)"))
#ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures//PEdistr_fLR_instr.All.png"))
# now three
# PE obse -three
# by participant
#ggplot(exp1, aes(x=PEchoice))+ geom_histogram()+theme_bw()+
# facet_wrap(.~SubNum)
#ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/PEdistr_fLR_instr_byID.exp1.png"))
## Saving 7 x 5 in image
## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
#ggplot(exp2, aes(x=PE))+ geom_histogram()+theme_bw()+
# facet_wrap(.~SubNum)
#ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/PEdistr_fLR_instr_byID.exp2.png"))
# PEdistrAccExp1<-ggplot(exp1, aes(x= PE, fill=PE_level))
#
# print(
#   PEdistrAccExp1+geom_histogram()+ facet_grid( trial_acc~ scn_condition)+ggtitle("PE observational distribution, Three")
# )
#
# PEdistrAccExp2<-ggplot(exp2, aes(x= PE, fill=scn_condition))
#
# print(
#   PEdistrAccExp2+geom_histogram()+ facet_grid( trial_acc~ scn_condition)+ggtitle("PE observational distribution, Three")
# )
#
# # first, analyse accuracy by
# ## PE by accuracy - pilot
# # plot
# exp1$trial_acc<-as.factor(exp1$trial_acc)
#
# levels(exp1$trial_acc)<-c("Incorrect", "Correct")
#
# print(
#   ggplot(exp1, aes( x=PE, y=id_acc))+
#     geom_line(stat="smooth",method = "glm",  formula=y~x,method.args=list(family="binomial"), alpha=0.5)+
#     aes(colour = factor(SubNum), alpha=0.3)+
#     geom_smooth(method="glm",formula=y~x,method.args=list(family="binomial"), colour="black", se=T)+
#     theme(strip.text.x = element_text(size = 13))+ ylim(c(0,1))+
#     facet_grid(.~trial_acc)+
#     theme_bw()+
#     ggtitle("Experiment 1")+
#     #annotate(geom="text",  label="a",size=8,family="serif")+
#     theme(legend.position = "none")+
#     ylab("p(Hit)")
# )
#ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/PE_mem_fLR_instr.exp1.png")
#  ,width = 7, height = 7)
#ggsave("PEobsByAccFeedbAll.png")
## PE by accuracy - exp2
# exp2$trial_acc<-as.factor(exp2$trial_acc)
#
# levels(exp2$trial_acc)<-c("Incorrect", "Correct")
#
# print(
#   ggplot(exp2, aes( x=PE, y=id_acc))+
#     geom_line(stat="smooth",method = "glm", formula=y~x,method.args=list(family="binomial"), alpha=0.5)+
#     aes(colour = factor(SubNum), alpha=0.3)+
#     geom_smooth(method="glm",formula=y~x,method.args=list(family="binomial"), colour="black", se=T)+
#     theme(strip.text.x = element_text(size = 13))+ ylim(c(0,1))+
#     facet_grid(.~trial_acc)+
#     theme_bw()+
#     ggtitle("Experiment 2")+
#     theme(legend.position = "none")+
#     ylab("p(Hit)")
# )
#
# #ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/PE_mem_fLR_instr.exp2.png"),
#        #width = 7, height = 7)
#
# # analyse
# PEbyAccExp1<-glmer(id_acc~PE*trial_acc+(trial_acc*PE|SubNum), family= binomial,
#                    data = exp1,
#                    control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
#
# summary(PEbyAccExp1)
# Anova(PEbyAccExp1)
#
# # in the positive side
# PEbyAccExp1Pos<-glmer(id_acc~PE+(PE|SubNum), family= binomial,
#                       data = exp1[exp1$trial_acc=="Correct",],
#                       control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
#
# summary(PEbyAccExp1Pos)
#
# # in the negative side
# PEbyAccExp1Neg<-glmer(id_acc~PE+(PE|SubNum), family= binomial,
#                       data = exp1[exp1$trial_acc=="Incorrect",],
#                       control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
#
# summary(PEbyAccExp1Neg)
#
# # analyse
# PEbyAccExp2<-glmer(id_acc~PE*trial_acc+(trial_acc*PE|SubNum), family= binomial,
#                    data = exp2,
#                    control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
#
# summary(PEbyAccExp2)
#
# Anova(PEbyAccExp2)
#
# # in the positive side
# PEbyAccExp2Pos<-glmer(id_acc~PE+(PE|SubNum), family= binomial,
#                       data = exp2[exp2$trial_acc=="Correct",],
#                       control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
#
# summary(PEbyAccExp2Pos)
#
# # in the negative side
# PEbyAccExp2Neg<-glmer(id_acc~PE+(PE|SubNum), family= binomial,
#                       data = exp2[exp2$trial_acc=="Incorrect",],
#                       control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
#
# summary(PEbyAccExp2Neg)
exp1$exp<-"Experiment1"
exp2$exp<-"Experiment2"
exp2$session<-as.character(exp2$session)
exp1$session<-as.character(exp1$session)
exp1$PE_level<-as.character(exp1$PE_level)
exp2$PE_level<-as.character(exp2$PE_level)
exp1$scn_condition<-as.character(exp1$scn_condition)
exp2$scn_condition<-as.character(exp2$scn_condition)
# experiment 1
# learning rate
exp1lr<-fread(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/PREMUP_computational/exp1/outputs/group_level/computational_model/",
"ParameterEstimation.exp1.betalimit=10.initialQ=0.33.fLR_Instr.csv"))
# select the first three rows
exp1lr<-exp1lr[,1:3]
# change the name of the variable indicating the participant
names(exp1lr)[1]<-"SubNum"
exp1<-merge(exp1, exp1lr, by = "SubNum")
# exp 2
exp2lr<-fread(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/PREMUP_computational/exp2/outputs/group_level/computational_model/",
"ParameterEstimation.exp2.betalimit=10.initialQ=0.5.fLR_Instr.csv"))
# select the first three rows
exp2lr<-exp2lr[,1:3]
# change the name of the variable indicating the participant
names(exp2lr)[1]<-"SubNum"
merge(exp2, exp2lr, by = "SubNum")
expe<-merge(exp2, exp2lr, by = "SubNum")
exp2<-merge(exp2, exp2lr, by = "SubNum")
# add "2" in front of the subnum
exp2$SubNum<-exp2$SubNum+200
exp2<-exp2[, names(exp1)]
# merge thetwo
allData<-data.frame(rbind(exp1,exp2 ))
# how many trials per participant
allData %>%
group_by(SubNum) %>%
tally()
# plot merged data
PEDistrExp<-ggplot(allData, aes(x= PEchoice, fill="scn_condition"))
print(
ggplot(allData, aes( x=PEchoice, y=id_acc))+
geom_line(stat="smooth",method = "glm", formula=y~x,method.args=list(family="binomial"), alpha=0.5)+
aes(colour = factor(SubNum), alpha=0.3)+
geom_smooth(method="glm",formula=y~x,method.args=list(family="binomial"), colour="black", se=T)+
theme(strip.text.x = element_text(size = 13))+ ylim(c(0,1))+
# facet_grid(.~trial_acc)+
theme_classic()+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=13),
)+
theme(strip.text.x = element_text(size = 22))+
#ggtitle("Experiment 2")+
theme(legend.position = "none")+
ylab("p(Hit)")
)
# save it
ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/PEchoice_mem_fLR_instr.exp1.exp2.png"),
width = 7, height = 7)
print(
ggplot(allData, aes( x=PEchoice, y=id_acc))+
geom_line(stat="smooth",method = "glm", formula=y~x,method.args=list(family="binomial"), alpha=0.5)+
aes(colour = factor(SubNum), alpha=0.3)+
geom_smooth(method="glm",formula=y~x,method.args=list(family="binomial"), colour="black", se=T)+
theme(strip.text.x = element_text(size = 13))+ ylim(c(0,1))+
# facet_grid(.~trial_acc)+
theme_classic()+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=13),
)+
theme(strip.text.x = element_text(size = 22))+
#ggtitle("Experiment 2")+
theme(legend.position = "none")+
ylab("p(Hit)")+
xlab("PE")
)
# save it
ggsave(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/", "PREMUP_computational/computational_model/figures/PEchoice_mem_fLR_instr.exp1.exp2.png"),
width = 7, height = 7)
rm(list=ls())
# load the packages
library(data.table)
library(dplyr)
library(viridis)
library(lme4)
library(car)
setwd("computational_model")
expAll<-fread("output_files/fittedData_exp1-exp2_fLR_Instr.csv")
# learning rate
exp1lr<-fread(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/PREMUP_computational/exp1/outputs/group_level/computational_model/",
"ParameterEstimation.exp1.betalimit=10.initialQ=0.33.fLR_Instr.csv"))
exp2lr<-fread(paste0("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/PREMUP_computational/exp2/outputs/group_level/computational_model/",
"ParameterEstimation.exp2.betalimit=10.initialQ=0.5.fLR_Instr.csv"))
#------------------Experiment1-------------------------------------------------#
exp1<-expAll[expAll$exp=="Experiment1",]
# select the first three rows
#exp1lr<-exp1lr[,1:3]
# change the name of the variable indicating the participant
names(exp1lr)[1]<-"SubNum"
exp1All<-merge(exp1, exp1lr, by = "SubNum")
# analyse
PEbyBIC1<-glmer(id_acc~PE*trial_acc*BIC+(trial_acc*PE|SubNum), family= binomial,
data = exp1All,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(PEbyBIC1)
Anova(PEbyBIC1)
# create median split
medianBIC1<-median(exp1lr$BIC)
hist(exp1lr$BIC)
# plot
print(
ggplot(exp1All, aes( x=PE, y=id_acc))+
geom_line(stat="smooth",method = "glm",  formula=y~x,method.args=list(family="binomial"), alpha=0.5)+
aes(colour = factor(SubNum), alpha=0.3)+
geom_smooth(method="glm",formula=y~x,method.args=list(family="binomial"), colour="black", se=T)+
theme(strip.text.x = element_text(size = 13))+ ylim(c(0,1))+
facet_grid(.~high_low_BIC)+
theme_classic()+
ggtitle("Experiment 1")+
#annotate(geom="text",  label="a",size=8,family="serif")+
theme(legend.position = "none")+
ylab("p(Hit)")
)
# plot
print(
ggplot(exp1All, aes( x=PE, y=id_acc))+
geom_line(stat="smooth",method = "glm",  formula=y~x,method.args=list(family="binomial"), alpha=0.5)+
aes(colour = factor(SubNum), alpha=0.3)+
geom_smooth(method="glm",formula=y~x,method.args=list(family="binomial"), colour="black", se=T)+
theme(strip.text.x = element_text(size = 13))+ ylim(c(0,1))+
facet_grid(.~high_low_BIC)+
theme_classic()+
ggtitle("Experiment 1")+
#annotate(geom="text",  label="a",size=8,family="serif")+
theme(legend.position = "none")+
ylab("p(Hit)")
)
#------------------Experiment2-------------------------------------------------#
exp2<-expAll[expAll$exp=="Experiment2",]
# select the first three rows
exp2lr<-exp2lr
# change the name of the variable indicating the participant
names(exp2lr)[1]<-"SubNum"
# add 200 to lr to match the numbers of exp2
exp2lr$SubNum<-exp2lr$SubNum+200
#check if the numbers are ok
unique(exp2$SubNum)
unique(exp2lr$SubNum)
exp2All<-merge(exp2, exp2lr, by = "SubNum")
# analyse
PEbyBIC2<-glmer(id_acc~PE*trial_acc*BIC+(trial_acc*PE|SubNum), family= binomial,
data = exp2All,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
#-----------------extract the coefficient--------------------------------------#
# change ref
expAllLr$trial_acc<-as.factor(expAllLr$trial_acc)
expAllLr$trial_acc<-relevel(expAllLr$trial_acc, ref = "Incorrect")
PEnoOut<-glmer(id_acc~PE*trial_acc+(trial_acc*PE|SubNum), family= binomial,
data = expAllLr,
contrasts=list(trial_acc=c(0.5,-0.5)),
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
summary(PEnoOut)
Anova(PEnoOut)
# extract coefficients
coeff<-ranef(PEnoOut)$SubNum$`trial_accCorrect:PE`
# run a correlation
BICs<- expAllLr$BIC[!duplicated(expAllLr$SubNum)]
#-----------------extract the coefficient--------------------------------------#
# change ref
expAllLr$trial_acc<-as.factor(expAllLr$trial_acc)
expAllLr<-rbind(exp1All, exp2All)
#-----------------extract the coefficient--------------------------------------#
# change ref
expAllLr$trial_acc<-as.factor(expAllLr$trial_acc)
expAllLr$trial_acc<-relevel(expAllLr$trial_acc, ref = "Incorrect")
PEnoOut<-glmer(id_acc~PE*trial_acc+(trial_acc*PE|SubNum), family= binomial,
data = expAllLr,
contrasts=list(trial_acc=c(0.5,-0.5)),
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
# extract coefficients
coeff<-ranef(PEnoOut)$SubNum$`trial_accCorrect:PE`
PEnoOut<-glmer(id_acc~PE*trial_acc+(trial_acc*PE|SubNum), family= binomial,
data = expAllLr,
contrasts=list(trial_acc=c(0.5,-0.5)),
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))
# extract coefficients
coeff<-ranef(PEnoOut)$SubNum$`trial_accCorrect:PE`
# run a correlation
BICs<- expAllLr$BIC[!duplicated(expAllLr$SubNum)]
plot( BICs~coeff)
abline(lm(BICs ~ coeff))
#check
a<-lm(BICs ~ coeff)
summary(a)
cor.test(coeff, BICs)
# ggplot
# create a df
df<-as.data.frame(cbind(coeff,BICs ))
ggplot(df, aes(x = coeff,y= BICs ))+
geom_point()+
theme_classic()+
geom_smooth(method=lm, colour = "red")+
xlab("PExPO coefficients")+
theme(
plot.title = element_text(size = 22),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text=element_text(size=20)
)+
scale_x_continuous(breaks=c(-0.50,-0.25,0.00,  0.25))+
ylab("BIC")
# save
ggsave("figures/PExPO_BIC.jpg",
width = 7, height = 6)
# save
ggsave("figures/PExPO_BIC.jpg",
width = 7, height = 7)
# get the table
BIC1<-read.csv("TableBIC.bypart.exp1.csv")
# get the table
BIC1<-read.csv("output_files/TableBIC.bypart.exp1.csv")
getwd()
setwd("/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/PREMUP_computational")
# get the table
BIC1<-read.csv("output_files/TableBIC.bypart.exp1.csv")
# get the table
BIC1<-read.csv("output_files/TableBIC.bypart.exp1.csv")
BIC1<-read.csv("output_files/TableBIC.bypart.exp1.csv")
getwd()
cd("computational_model")
setwd("computational_model")
# get the table
BIC1<-read.csv("output_files/TableBIC.bypart.exp1.csv")
BIC1<-read.csv("output_files/TableBIC.bypart.exp1.csv")
BIC2<-read.csv("output_files/TableBIC.bypart.exp2.csv")
MoI<- c("dLR_Instr","dfLR_Instr", "fLR_Instr", "fLR_Eval")
j<-1
index<-which(BIC1[j,]==min(BicAll_wideBIC[j,MoI]))
index<-which(BIC1[j,]==min(BIC1[j,MoI]))
index2<-which(BIC1[j,]==unlist(sort(BIC1[j,MoI])[2]))
# add the winnign model
for (j in 1: nrow(BIC1)){
tryCatch({
# index<-which(BicAll_wideBIC[j,]==min(BicAll_wideBIC[j,(2:(length(files)))], na.rm=T))
index<-which(BIC1[j,]==min(BIC1[j,MoI]))
if (length(index)>1) {# fi there are more than one model
BIC1$BestModel[j]<-NA
}else{
BIC1$BestModel[j]<-names(BIC1[index])
}
}, error = function(e) { print(paste("problem with number", j))},
warning = function(f) { print(paste("warning with number", j))})
}
BIC1
table(BIC1$BestModel)
# now experiment 2
for (j in 1: nrow(BIC2)){
tryCatch({
# index<-which(BicAll_wideBIC[j,]==min(BicAll_wideBIC[j,(2:(length(files)))], na.rm=T))
index<-which(BIC2[j,]==min(BIC2[j,MoI]))
if (length(index)>1) {# fi there are more than one model
BIC2$BestModel[j]<-NA
}else{
BIC2$BestModel[j]<-names(BIC2[index])
}
}, error = function(e) { print(paste("problem with number", j))},
warning = function(f) { print(paste("warning with number", j))})
}
table(BIC2$BestModel)
exp1_dLR_Instr<-read.csv(paste(abs, "fittedData.exp1.Phase2.dLR_Instr.csv", sep=""))
abs<-"/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/PREMUP_computational/computational_model/output_files/"
exp1_dLR_Instr<-read.csv(paste(abs, "fittedData.exp1.Phase2.dLR_Instr.csv", sep=""))
abs
read.csv(paste(abs, "fittedData.exp1.Phase2.dLR_Instr.csv", sep=""))
#abs<-"/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/PREMUP_computational/computational_model/output_files/"
abs<-"/Users/francescopupillo/PowerFolders/Frankfurt_University/PIVOTAL/PREMUP_computational/computational_model/output_files/"
exp1<-read.csv(paste(abs, "fittedData.exp1.Phase2.fLR_Instr.csv", sep=""))
knitr::opts_chunk$set(echo = TRUE)
# model based stats
rm(list=ls())
library(ggplot2)
library(lme4)
library(dplyr)
library(reshape2)
library(lmerTest)
library(car)
library(data.table)
# set current directory to the parent folder
setwd(dirname(getwd()))
cd<-getwd()
source("helper_functions/getPE.R")
setwd("output_files")
getwd()
# get the files
#abs<-abs<-"/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/PREMUP/computational_model/output_files/"
#abs<-"/home/francesco/PowerFolders/Frankfurt_University/PIVOTAL/PREMUP_computational/computational_model/output_files/"
abs<-"/Users/francescopupillo/PowerFolders/Frankfurt_University/PIVOTAL/PREMUP_computational/computational_model/output_files/"
exp1<-read.csv(paste(abs, "fittedData.exp1.Phase2.fLR_Instr.csv", sep=""))
